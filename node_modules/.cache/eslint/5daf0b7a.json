[{"/Users/andoyusuke/portfolio_ando/src/main.ts":"1","/Users/andoyusuke/portfolio_ando/src/App.vue":"2","/Users/andoyusuke/portfolio_ando/src/store/index.ts":"3","/Users/andoyusuke/portfolio_ando/src/router/index.ts":"4","/Users/andoyusuke/portfolio_ando/src/views/home/index.vue":"5","/Users/andoyusuke/portfolio_ando/src/views/home/Home.vue":"6","/Users/andoyusuke/portfolio_ando/src/views/works/index.vue":"7","/Users/andoyusuke/portfolio_ando/src/views/works/Works.vue":"8","/Users/andoyusuke/portfolio_ando/src/views/about/index.vue":"9","/Users/andoyusuke/portfolio_ando/src/views/about/About.vue":"10","/Users/andoyusuke/portfolio_ando/src/components/organisms/NavigationBar.vue":"11","/Users/andoyusuke/portfolio_ando/src/components/organisms/Stack.vue":"12","/Users/andoyusuke/portfolio_ando/src/components/organisms/AboutContent.vue":"13","/Users/andoyusuke/portfolio_ando/src/components/organisms/modal/Settings.vue":"14","/Users/andoyusuke/portfolio_ando/src/components/organisms/WorksContent.vue":"15","/Users/andoyusuke/portfolio_ando/src/components/organisms/ContentBlock.vue":"16","/Users/andoyusuke/portfolio_ando/src/components/organisms/SkillContent.vue":"17"},{"size":579,"mtime":1650102205320,"results":"18","hashOfConfig":"19"},{"size":773,"mtime":1650100269012,"results":"20","hashOfConfig":"19"},{"size":731,"mtime":1650100231416,"results":"21","hashOfConfig":"19"},{"size":1179,"mtime":1650100213861,"results":"22","hashOfConfig":"19"},{"size":221,"mtime":1650101571590,"results":"23","hashOfConfig":"19"},{"size":18868,"mtime":1650101341412,"results":"24","hashOfConfig":"19"},{"size":222,"mtime":1650100254428,"results":"25","hashOfConfig":"19"},{"size":6716,"mtime":1650101358330,"results":"26","hashOfConfig":"19"},{"size":222,"mtime":1650100239996,"results":"27","hashOfConfig":"19"},{"size":5194,"mtime":1650101321231,"results":"28","hashOfConfig":"19"},{"size":915,"mtime":1650101235788,"results":"29","hashOfConfig":"19"},{"size":548,"mtime":1650101266062,"results":"30","hashOfConfig":"19"},{"size":2270,"mtime":1650101206042,"results":"31","hashOfConfig":"19"},{"size":6396,"mtime":1650102172222,"results":"32","hashOfConfig":"19"},{"size":10952,"mtime":1650101189530,"results":"33","hashOfConfig":"19"},{"size":1563,"mtime":1650101230877,"results":"34","hashOfConfig":"19"},{"size":2041,"mtime":1650101242446,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"1k258cy",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/Users/andoyusuke/portfolio_ando/src/main.ts",["82","83","84"],"import { createApp } from \"vue\";\nimport Vue from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport _ from \"lodash\";\n// import i18n from \"./i18n/locales/index\";\nimport dayjs from \"dayjs\";\nimport duration from \"dayjs/plugin/duration\";\nimport \"@/assets/scss/style.scss\";\nconst app = createApp(App);\napp.use(store).use(router).use(_).mount(\"#app\");\n// Vue.use(VueCompositionApi)\napp.config.globalProperties.$_ = _;\napp.provide(\"_\", _);\n// Vue.prototype.$_ = _;\n// app.use(prototype)\n\n// VueCompositionApi.prototype.$dayjs = dayjs\n","/Users/andoyusuke/portfolio_ando/src/App.vue",[],"/Users/andoyusuke/portfolio_ando/src/store/index.ts",[],"/Users/andoyusuke/portfolio_ando/src/router/index.ts",["85"],"import {\n  createRouter,\n  createMemoryHistory,\n  createWebHistory,\n  RouteRecordRaw,\n} from \"vue-router\";\nimport HomeView from \"../views/home/index.vue\";\nimport WorksView from \"../views/works/index.vue\";\nimport AboutView from \"../views/about/index.vue\";\nimport Home from \"../views/home/Home.vue\";\nimport Works from \"../views/works/Works.vue\";\nimport About from \"../views/about/About.vue\";\n\nconst baseUrl = \"ando_portfolio\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: \"/home\",\n    component: HomeView,\n    children: [\n      {\n        path: \"\",\n        name: \"Home\",\n        component: Home,\n      },\n    ],\n  },\n  {\n    path: \"/works\",\n    component: WorksView,\n    children: [\n      {\n        path: \"\",\n        name: \"Works\",\n        component: Works,\n      },\n    ],\n  },\n  {\n    path: \"/about\",\n    component: AboutView,\n    children: [\n      {\n        path: \"\",\n        name: \"About\",\n        component: About,\n      },\n    ],\n  },\n];\n\nconst routerBase = createMemoryHistory(baseUrl);\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  // base: baseUrl,\n  routes,\n});\n\nexport default router;\n// export default router; routerBase;\n","/Users/andoyusuke/portfolio_ando/src/views/home/index.vue",[],"/Users/andoyusuke/portfolio_ando/src/views/home/Home.vue",["86","87","88","89","90"],"<template>\n  <div class=\"Main\">\n    <NavigationBar\n      :navigationList=\"navigationList\"\n      @clickNavigate=\"clickNavigate\"\n    />\n    <div\n      class=\"Main--content\"\n      :class=\"{ 'MainContennt--modal_open': isSettingOpen }\"\n      @click=\"isSettingOpen = false\"\n    >\n      <div class=\"MainContentImgArea\">\n        <div class=\"MainContentImg\">\n          <img src=\"/assets/img/back_1.jpg\" alt=\"\" />\n        </div>\n      </div>\n      <Stack title=\"Service\">\n        <template #content>\n          <ContentBlock\n            :contentList=\"contentServiceList\"\n            @clickContent=\"clickContent\"\n          />\n        </template>\n      </Stack>\n      <Stack title=\"SKill\">\n        <template #content>\n          <div class=\"SkillContentArea\">\n            <SkillContent\n              v-for=\"(skillContent, skillContentidx) in skillContentList\"\n              :key=\"skillContentidx\"\n              :skillContent=\"skillContent\"\n            />\n          </div>\n        </template>\n      </Stack>\n      <Stack title=\"Works\">\n        <template #content>\n          <WorksContent\n            :worksContentList=\"worksContentList\"\n            :isImgShow=\"false\"\n            @clickWork=\"clickWork\"\n          />\n        </template>\n      </Stack>\n    </div>\n    <SettingModal\n      v-if=\"isModalOpen\"\n      :isModalOpen=\"isSettingOpen\"\n      @clickClose=\"isSettingOpen = false\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, watch } from \"vue\";\nimport router from \"@/router\";\nimport NavigationBar from \"@/components/organisms/NavigationBar.vue\";\nimport Stack from \"@/components/organisms/Stack.vue\";\nimport ContentBlock from \"@/components/organisms/ContentBlock.vue\";\nimport WorksContent from \"@/components/organisms/WorksContent.vue\";\nimport SkillContent from \"@/components/organisms/SkillContent.vue\";\nimport SettingModal from \"@/components/organisms/modal/Settings.vue\";\nimport _ from \"lodash\";\nimport { NavigationType } from \"@/interface/navigation\";\nimport { ContentType } from \"@/interface/contentBlock\";\nimport { WorksContentType } from \"@/interface/worksContent\";\nimport { SkillContentType } from \"@/interface/skillContent\";\n\nexport default defineComponent({\n  name: \"HomeView\",\n  components: {\n    NavigationBar,\n    Stack,\n    ContentBlock,\n    WorksContent,\n    SkillContent,\n    SettingModal,\n  },\n  setup(props) {\n    //モーダル表示フラグ\n    const isModalOpen = ref(false);\n    //設定モーダル表示フラグ\n    const isSettingOpen = ref(false);\n\n    const navigationList = ref<NavigationType[]>([\n      {\n        label: \"Home\",\n        eventName: \"nabigateHome\",\n        routerName: \"Home\",\n        style: \"\",\n        selected: true,\n      },\n      {\n        label: \"About\",\n        eventName: \"nabigateAbout\",\n        routerName: \"About\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Works\",\n        eventName: \"nabigateWorks\",\n        routerName: \"Works\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Contact\",\n        eventName: \"nabigateHome\",\n        routerName: \"Contact\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Settings\",\n        eventName: \"openSettings\",\n        routerName: \"Settings\",\n        style: \"\",\n        selected: false,\n      },\n    ]);\n\n    const contentServiceList = ref<ContentType[]>([\n      {\n        title: \"ディレクション\",\n        subTitle: \"DIRECTION\",\n        label:\n          \"お客様の要望をヒアリングし、現状の問題点を洗い出し、効果的なプランを作成いたします。制作ではデザインに入る前の事前の準備が特に重要になります。何が必要で何が必要でないのかを判断し、費用対効果の高いWebサイトを作るための土台を作ります。\",\n        src: \"\",\n        style: \"\",\n      },\n      {\n        title: \"デザイン\",\n        subTitle: \"DESIGN\",\n        label:\n          \"ヒアリングに基づいたプランに沿って、デザインを作成いたします。人の使うものであることを常に意識して、使う人が迷わない、目的を達成できるデザインを心がけています。インターフェースの重要性が増す中でデザインの役割を理解し、そのプランに最適な提案をさせていただきます。\",\n        src: \"\",\n        style: \"\",\n      },\n      {\n        title: \"コーディング\",\n        subTitle: \"CODING\",\n        label:\n          \"デザインの意図を理解し、動きや効果を適切に使用することでWebサイトの仕上がりは大きく変わります。スマートフォンサイト、ワードプレスを使用した更新性の高いサイト、Javascriptを使用した動きのあるサイトなど、様々なサイトのコーディングを行っております。\",\n        src: \"\",\n        style: \"\",\n      },\n    ]);\n\n    const skillContentList = ref<SkillContentType[]>([\n      {\n        title: \"言語\",\n        description: \"実装経験のある言語です。\",\n        iconClass: \"Icon--program\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"HTML\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"CSS\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"Javascript\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"Typescript\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"SCSS\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"Java\",\n            experience: 2,\n            level: 3,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"フロントエンド\",\n        description: \"主にVue.jsを用いて開発に携わってきました。\",\n        iconClass: \"Icon--program\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"Vue.js(Vue3)\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"Edge.js\",\n            experience: 1,\n            level: 2,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"バックエンド\",\n        description: \"主にSpring Bootを用いて開発に携わってきました。\",\n        iconClass: \"Icon--program\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"Spring Boot\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"Struts\",\n            experience: 1,\n            level: 2,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"DB\",\n        description:\n          \"主にO/RマッパーとしてMybatisを用いて開発に携わってきました。\",\n        iconClass: \"Icon--db\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"MySQL\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"Mybatis\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"Oracle\",\n            experience: 1,\n            level: 3,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"インフラ\",\n        description: \"主にawsを利用して開発に携わってきました。\",\n        iconClass: \"Icon--infra\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"aws(EC2, S3 etc)\",\n            experience: 2,\n            level: 2,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"その他\",\n        description: \"案件に携わった際に利用したツールです。\",\n        iconClass: \"Icon--pc\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"Slack\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"ZOOM\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"vsode\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n\n          {\n            label: \"Teams\",\n            experience: 1,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"SorceTree\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"TortoseGit\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"figma\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"A5\",\n            experience: 2,\n            level: 3,\n            style: \"\",\n          },\n          {\n            label: \"eclipse\",\n            experience: 2,\n            level: 3,\n            style: \"\",\n          },\n          {\n            label: \"intelij\",\n            experience: 1,\n            level: 3,\n            style: \"\",\n          },\n        ],\n      },\n    ]);\n\n    const worksContentList = ref<WorksContentType[]>([\n      {\n        id: 1,\n        title: \"株式会社日本ワムネット\",\n        subTitle: \"Planning / Design / HTML,CSS / Vue.js / Spring Boot /\",\n        description:\n          \"企業に対してファイル共有サービスを提供する事業。 管理者画面のシステム構築、管理者画面の作成させていただきました。基本設計からデザイン、コーディング、単体テストの管理を担当させていただきました。\",\n        period: \"2020/7 ~ 2022/1\",\n        src: \"/assets/img/sample1.jpeg\",\n        style: \"\",\n        selected: true,\n        developmentPhase: {\n          definition: false,\n          basicDesign: true,\n          detailDesign: true,\n          coding: true,\n          unitTest: true,\n          combinedTest: false,\n          maintenance: false,\n        },\n        achievementList: [\n          {\n            label: \"デザイン\",\n            description: \"figmaを用いて画面デザインの作成・編集\",\n            archievement: \"75/137画面\",\n            style: \"\",\n          },\n          {\n            label: \"基本設計\",\n            description: \"基本設計_画面定義書の作成・編集\",\n            archievement: \"51/137個\",\n            style: \"\",\n          },\n          {\n            label: \"詳細設計\",\n            description: \"詳細設計_画面定義書の編集\",\n            archievement: \"50/137個\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装（マークアップ）\",\n            description: \"edge.jsを用いてモック用の画面の作成\",\n            archievement: \"69/137画面\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装\",\n            description: \"vue.jsを用いて画面の作成・編集\",\n            archievement: \"89/137画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"4/135個\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（バッチ）\",\n            description: \"SpringBootを用いてバッチの作成・編集\",\n            archievement: \"33/35個\",\n            style: \"\",\n          },\n        ],\n      },\n      {\n        id: 2,\n        title: \"株式市場イトーヨーカドー\",\n        subTitle: \"HTML,CSS / Spring Boot / MyBatis\",\n        description:\n          \"イトーヨーカドーのネットスーパーサービスにおける、商品管理システムのリプレースをさせて頂きました。開発・製造のフェーズから参画致しました。\",\n        period: \"2022/1 ~ 2022/6\",\n        src: \"/assets/img/sample2.jpeg\",\n        style: \"\",\n        selected: false,\n        developmentPhase: {\n          definition: false,\n          basicDesign: false,\n          detailDesign: false,\n          coding: true,\n          unitTest: true,\n          combinedTest: true,\n          maintenance: false,\n        },\n        achievementList: [\n          {\n            label: \"フロント実装\",\n            description: \"velocityを用いて画面の作成・編集\",\n            archievement: \"30画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n        ],\n      },\n      {\n        id: 3,\n        title: \"株式市場イトーヨーカドー（テスト）\",\n        subTitle: \"HTML,CSS / Spring Boot / MyBatis\",\n        description:\n          \"イトーヨーカドーのネットスーパーサービスにおける、商品管理システムのリプレースをさせて頂きました。\",\n        period: \"2022/1 ~ 2022/6\",\n        src: \"/assets/img/sample3.jpeg\",\n        style: \"\",\n        selected: false,\n        developmentPhase: {\n          definition: false,\n          basicDesign: false,\n          detailDesign: false,\n          coding: true,\n          unitTest: true,\n          combinedTest: true,\n          maintenance: false,\n        },\n        achievementList: [\n          {\n            label: \"フロント実装\",\n            description: \"velocityを用いて画面の作成・編集\",\n            archievement: \"30画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装\",\n            description: \"velocityを用いて画面の作成・編集\",\n            archievement: \"30画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装\",\n            description: \"velocityを用いて画面の作成・編集\",\n            archievement: \"30画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装\",\n            description: \"velocityを用いて画面の作成・編集\",\n            archievement: \"30画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装\",\n            description: \"velocityを用いて画面の作成・編集\",\n            archievement: \"30画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装\",\n            description: \"velocityを用いて画面の作成・編集\",\n            archievement: \"30画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装\",\n            description: \"velocityを用いて画面の作成・編集\",\n            archievement: \"30画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"19個\",\n            style: \"\",\n          },\n        ],\n      },\n    ]);\n\n    //ナビゲーションクリック\n    const clickNavigate = (eventName: string) => {\n      for (const item of navigationList.value) {\n        if (_.isEqual(item.eventName, eventName) && item.selected) {\n          return;\n        } else if (_.isEqual(item.eventName, eventName)) {\n          switch (eventName) {\n            case navigationList.value[4].eventName:\n              isSettingOpen.value = !isSettingOpen.value;\n              break;\n            default:\n              router.push({\n                name: item.routerName,\n              });\n          }\n          break;\n        }\n      }\n    };\n\n    const clickContent = (item: ContentType) => {\n      console.log(\"test\");\n    };\n\n    //work選択\n    const clickWork = (item: WorksContentType) => {\n      for (const workItem of worksContentList.value) {\n        if (_.isEqual(item.id, workItem.id)) {\n          workItem.selected = true;\n        } else {\n          workItem.selected = false;\n        }\n      }\n    };\n    //モーダル状態監視\n    watch(isSettingOpen, (newVal, oldVal) => {\n      if (oldVal) {\n        setTimeout(() => {\n          isModalOpen.value = newVal;\n        }, 1000 * 0.3);\n      } else {\n        isModalOpen.value = newVal;\n      }\n    });\n\n    return {\n      isModalOpen,\n      isSettingOpen,\n      navigationList,\n      contentServiceList,\n      worksContentList,\n      skillContentList,\n      clickWork,\n      clickNavigate,\n    };\n  },\n});\n</script>\n","/Users/andoyusuke/portfolio_ando/src/views/works/index.vue",[],"/Users/andoyusuke/portfolio_ando/src/views/works/Works.vue",["91","92"],"<template>\n  <div class=\"Main\">\n    <NavigationBar\n      :navigationList=\"navigationList\"\n      @clickNavigate=\"clickNavigate\"\n    />\n\n    <div\n      class=\"Main--content\"\n      :class=\"{ 'MainContennt--modal_open': isSettingOpen }\"\n      @click=\"isSettingOpen = false\"\n    >\n      <Stack title=\"Works\" titleStyle=\"Content__title--mt24\">\n        <template #content>\n          <WorksContent\n            :worksContentList=\"worksContentList\"\n            @clickWork=\"clickWork\"\n          />\n        </template>\n      </Stack>\n    </div>\n    <SettingModal\n      v-if=\"isModalOpen\"\n      :isModalOpen=\"isSettingOpen\"\n      @clickClose=\"isSettingOpen = false\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, watch } from \"vue\";\nimport router from \"@/router\";\nimport NavigationBar from \"@/components/organisms/NavigationBar.vue\";\nimport Stack from \"@/components/organisms/Stack.vue\";\nimport WorksContent from \"@/components/organisms/WorksContent.vue\";\nimport SettingModal from \"@/components/organisms/modal/Settings.vue\";\n\nimport _ from \"lodash\";\nimport { NavigationType } from \"@/interface/navigation\";\nimport { WorksContentType } from \"@/interface/worksContent\";\n\nexport default defineComponent({\n  name: \"WorksView\",\n  components: {\n    NavigationBar,\n    Stack,\n    WorksContent,\n    SettingModal,\n  },\n  setup(props) {\n    //モーダル表示フラグ\n    const isModalOpen = ref(false);\n    //設定モーダル表示フラグ\n    const isSettingOpen = ref(false);\n    const navigationList = ref<NavigationType[]>([\n      {\n        label: \"Home\",\n        eventName: \"nabigateHome\",\n        routerName: \"Home\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"About\",\n        eventName: \"nabigateAbout\",\n        routerName: \"About\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Works\",\n        eventName: \"nabigateWorks\",\n        routerName: \"Works\",\n        style: \"\",\n        selected: true,\n      },\n      {\n        label: \"Contact\",\n        eventName: \"nabigateHome\",\n        routerName: \"Contact\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Settings\",\n        eventName: \"openSettings\",\n        routerName: \"Settings\",\n        style: \"\",\n        selected: false,\n      },\n    ]);\n\n    const worksContentList = ref<WorksContentType[]>([\n      {\n        id: 1,\n        title: \"株式会社日本ワムネット\",\n        subTitle: \"Planning / Design / HTML,CSS / Vue.js / Spring Boot /\",\n        description:\n          \"企業に対してファイル共有サービスを提供する事業。 管理者画面のシステム構築、管理者画面の作成させていただきました。基本設計からデザイン、コーディング、単体テストの管理を担当させていただきました。\",\n        period: \"2020/7 ~ 2022/1\",\n        src: \"/assets/img/sample1.jpeg\",\n        style: \"\",\n        selected: true,\n        developmentPhase: {\n          definition: false,\n          basicDesign: true,\n          detailDesign: true,\n          coding: true,\n          unitTest: true,\n          combinedTest: false,\n          maintenance: false,\n        },\n        achievementList: [\n          {\n            label: \"デザイン\",\n            description: \"figmaを用いて画面デザインの作成・編集\",\n            archievement: \"75/137画面\",\n            style: \"\",\n          },\n          {\n            label: \"基本設計\",\n            description: \"基本設計_画面定義書の作成・編集\",\n            archievement: \"51/137個\",\n            style: \"\",\n          },\n          {\n            label: \"詳細設計\",\n            description: \"詳細設計_画面定義書の編集\",\n            archievement: \"50/137個\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装（マークアップ）\",\n            description: \"edge.jsを用いてモック用の画面の作成\",\n            archievement: \"69/137画面\",\n            style: \"\",\n          },\n          {\n            label: \"フロント実装\",\n            description: \"vue.jsを用いて画面の作成・編集\",\n            archievement: \"89/137画面\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（API）\",\n            description: \"SpringBootを用いてAPIの作成・編集\",\n            archievement: \"4/135個\",\n            style: \"\",\n          },\n          {\n            label: \"サーバサイド実装（バッチ）\",\n            description: \"SpringBootを用いてバッチの作成・編集\",\n            archievement: \"33/35個\",\n            style: \"\",\n          },\n        ],\n      },\n      {\n        id: 2,\n        title: \"タイトル\",\n        subTitle: \"サブタイトル\",\n        description: \"説明\",\n        period: \"2022/1 ~ 2022/6\",\n        src: \"/assets/img/sample2.jpeg\",\n        style: \"\",\n        selected: false,\n        developmentPhase: {\n          definition: false,\n          basicDesign: false,\n          detailDesign: false,\n          coding: true,\n          unitTest: true,\n          combinedTest: true,\n          maintenance: false,\n        },\n        achievementList: [\n          {\n            label: \"ラベル\",\n            description: \"説明\",\n            archievement: \"\",\n            style: \"\",\n          },\n        ],\n      },\n    ]);\n\n    //ナビゲーションクリック\n    const clickNavigate = (eventName: string) => {\n      for (const item of navigationList.value) {\n        if (_.isEqual(item.eventName, eventName) && item.selected) {\n          return;\n        } else if (_.isEqual(item.eventName, eventName)) {\n          switch (eventName) {\n            case navigationList.value[4].eventName:\n              isSettingOpen.value = !isSettingOpen.value;\n              break;\n            default:\n              router.push({\n                name: item.routerName,\n              });\n          }\n          break;\n        }\n      }\n    };\n\n    //work選択\n    const clickWork = (item: WorksContentType) => {\n      for (const workItem of worksContentList.value) {\n        if (_.isEqual(item.id, workItem.id)) {\n          workItem.selected = true;\n        } else {\n          workItem.selected = false;\n        }\n      }\n    };\n    //モーダル状態監視\n    watch(isSettingOpen, (newVal, oldVal) => {\n      if (oldVal) {\n        setTimeout(() => {\n          isModalOpen.value = newVal;\n        }, 1000 * 0.3);\n      } else {\n        isModalOpen.value = newVal;\n      }\n    });\n    return {\n      isModalOpen,\n      isSettingOpen,\n      navigationList,\n      worksContentList,\n      clickNavigate,\n      clickWork,\n    };\n  },\n});\n</script>\n","/Users/andoyusuke/portfolio_ando/src/views/about/index.vue",[],"/Users/andoyusuke/portfolio_ando/src/views/about/About.vue",["93"],"<template>\n  <div class=\"Main\">\n    <NavigationBar\n      :navigationList=\"navigationList\"\n      @clickNavigate=\"clickNavigate\"\n    />\n\n    <div\n      class=\"Main--content\"\n      :class=\"{ 'MainContennt--modal_open': isSettingOpen }\"\n      @click=\"isSettingOpen = false\"\n    >\n      <Stack title=\"About\" titleStyle=\"Content__title--mt24\">\n        <template #content>\n          <AboutContent\n            :aboutContent=\"aboutContent\"\n            @clickContent=\"clickContent\"\n          />\n        </template>\n      </Stack>\n    </div>\n    <SettingModal\n      v-if=\"isModalOpen\"\n      :isModalOpen=\"isSettingOpen\"\n      @clickClose=\"isSettingOpen = false\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, watch } from \"vue\";\nimport router from \"@/router\";\nimport NavigationBar from \"@/components/organisms/NavigationBar.vue\";\nimport Stack from \"@/components/organisms/Stack.vue\";\nimport AboutContent from \"@/components/organisms/AboutContent.vue\";\nimport SettingModal from \"@/components/organisms/modal/Settings.vue\";\n\nimport _ from \"lodash\";\nimport { NavigationType } from \"@/interface/navigation\";\nimport { AboutContentType } from \"@/interface/aboutContent\";\n\nexport default defineComponent({\n  name: \"AboutView\",\n  components: {\n    NavigationBar,\n    Stack,\n    AboutContent,\n    SettingModal,\n  },\n  setup(props) {\n    //モーダル表示フラグ\n    const isModalOpen = ref(false);\n    //設定モーダル表示フラグ\n    const isSettingOpen = ref(false);\n    const navigationList = ref<NavigationType[]>([\n      {\n        label: \"Home\",\n        eventName: \"nabigateHome\",\n        routerName: \"Home\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"About\",\n        eventName: \"nabigateAbout\",\n        routerName: \"About\",\n        style: \"\",\n        selected: true,\n      },\n      {\n        label: \"Works\",\n        eventName: \"nabigateWorks\",\n        routerName: \"Works\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Contact\",\n        eventName: \"nabigateHome\",\n        routerName: \"Contact\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Settings\",\n        eventName: \"openSettings\",\n        routerName: \"Settings\",\n        style: \"\",\n        selected: false,\n      },\n    ]);\n    const aboutContent = reactive<AboutContentType>({\n      title: \"About\",\n      src: \"/assets/img/profile.png\",\n      style: \"\",\n      introductionList: [\n        {\n          label: \"名前\",\n          description: \"安藤優介（Yusuke Ando）\",\n          style: \"\",\n        },\n        {\n          label: \"生年月日\",\n          description: \"1996/06/20\",\n          style: \"\",\n        },\n        {\n          label: \"出身地\",\n          description: \"宮城県\",\n          style: \"\",\n        },\n        {\n          label: \"最終学歴\",\n          description: \"明治大学理工学部応用化学科\",\n          style: \"\",\n        },\n        {\n          label: \"プログラミング言語\",\n          description: \"HTML, CSS, javaScript, Java\",\n          style: \"\",\n        },\n        {\n          label: \"フレームワーク\",\n          description: \"SpringBoot, Vue.js, Edge.js\",\n          style: \"\",\n        },\n      ],\n      aboutHistoryList: [\n        {\n          year: \"2020/3\",\n          description: \"明治大学理工学部応用化学科 卒業\",\n          style: \"\",\n        },\n        {\n          year: \"2020/4\",\n          description: \"株式会社FORES 入社\",\n          style: \"\",\n        },\n        {\n          year: \"2020/5\",\n          description: \"研修\",\n          style: \"\",\n        },\n        {\n          year: \"2020/6\",\n          description: \"某生命保険会社 顧客管理システムリプレース案件参画\",\n          style: \"\",\n        },\n        {\n          year: \"2020/7\",\n          description:\n            \"某ファイル共有サービス会社 顧客・管理者システムリニューアル案件参画\",\n          style: \"\",\n        },\n        {\n          year: \"2022/1\",\n          description: \"某総合商社 ネットスーパーリプレース案件参画\",\n          style: \"\",\n        },\n      ],\n    });\n\n    //ナビゲーションクリック\n    const clickNavigate = (eventName: string) => {\n      for (const item of navigationList.value) {\n        if (_.isEqual(item.eventName, eventName) && item.selected) {\n          return;\n        } else if (_.isEqual(item.eventName, eventName)) {\n          switch (eventName) {\n            case navigationList.value[4].eventName:\n              isSettingOpen.value = !isSettingOpen.value;\n              break;\n            default:\n              router.push({\n                name: item.routerName,\n              });\n          }\n          break;\n        }\n      }\n    };\n    //モーダル状態監視\n    watch(isSettingOpen, (newVal, oldVal) => {\n      if (oldVal) {\n        setTimeout(() => {\n          isModalOpen.value = newVal;\n        }, 1000 * 0.3);\n      } else {\n        isModalOpen.value = newVal;\n      }\n    });\n\n    return {\n      isModalOpen,\n      isSettingOpen,\n      navigationList,\n      aboutContent,\n      clickNavigate,\n    };\n  },\n});\n</script>\n","/Users/andoyusuke/portfolio_ando/src/components/organisms/NavigationBar.vue",["94","95"],"<template>\n  <div class=\"navigationArea\">\n    <ul>\n      <li\n        v-for=\"(navigateItem, navigateidx) in navigationList\"\n        :key=\"navigateidx\"\n        :class=\"{ 'selected-title': navigateItem.selected }\"\n        @click=\"clickNavigate(navigateItem)\"\n      >\n        <span :class=\"navigateItem.style\">{{ navigateItem.label }}</span>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, PropType } from \"vue\";\nimport { NavigationType } from \"@/interface/navigation\";\n\nexport default defineComponent({\n  name: \"NavigationBar\",\n  props: {\n    navigationList: {\n      type: Array as PropType<NavigationType[]>,\n      required: true,\n    },\n  },\n  setup(props, { emit }) {\n    const clickNavigate = (item: NavigationType) => {\n      emit(\"clickNavigate\", item.eventName);\n    };\n    return { clickNavigate };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","/Users/andoyusuke/portfolio_ando/src/components/organisms/Stack.vue",["96","97","98","99"],"<template>\n  <div class=\"Content\">\n    <div class=\"Content__title\" :class=\"titleStyle\">{{ title }}</div>\n    <slot name=\"content\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, PropType } from \"vue\";\nimport { ContentType } from \"@/interface/contentBlock\";\n\nexport default defineComponent({\n  name: \"StackContent\",\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    titleStyle: {\n      type: String,\n      required: false,\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","/Users/andoyusuke/portfolio_ando/src/components/organisms/AboutContent.vue",["100","101"],"<template>\n  <div class=\"AboutContentArea\">\n    <div class=\"AboutContentArea__introduction\">\n      <div class=\"IntroductionArea\">\n        <div class=\"IntroductionImg\">\n          <img\n            v-if=\"!$_.isEmpty(aboutContent.src)\"\n            :src=\"aboutContent.src\"\n            alt=\"\"\n          />\n        </div>\n        <div class=\"IntroductionContent\">\n          <div\n            v-for=\"(\n              introduction, introductionIdx\n            ) in aboutContent.introductionList\"\n            :key=\"introductionIdx\"\n            class=\"Introduction\"\n            :class=\"introduction.style\"\n          >\n            <div class=\"Introduction__label\">{{ introduction.label }}</div>\n            <div class=\"Introduction__description\">\n              {{ introduction.description }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"AboutContentArea__history\">\n      <table class=\"HistoryTable\">\n        <thead>\n          <tr>\n            <th>\n              <div class=\"HistoryTable__header\">西暦</div>\n            </th>\n            <th>\n              <div class=\"HistoryTable__header\">内容</div>\n            </th>\n          </tr>\n        </thead>\n        <tbody calss=\"HistoryTableContent\">\n          <tr\n            v-for=\"(item, itemIdx) in aboutContent.aboutHistoryList\"\n            :key=\"itemIdx\"\n            class=\"History\"\n            :class=\"item.style\"\n          >\n            <td>\n              <div class=\"History__label\">\n                {{ item.year }}\n              </div>\n            </td>\n            <td>\n              <div class=\"HistoryList__description\">\n                {{ item.description }}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, PropType } from \"vue\";\nimport { AboutContentType } from \"@/interface/aboutContent\";\n\nexport default defineComponent({\n  name: \"AboutContent\",\n  props: {\n    aboutContent: {\n      type: Object as PropType<AboutContentType>,\n      required: true,\n    },\n  },\n  setup(props, { emit }) {\n    const clickContent = () => {\n      emit(\"clickContent\");\n    };\n    return { clickContent };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","/Users/andoyusuke/portfolio_ando/src/components/organisms/modal/Settings.vue",["102","103","104"],"<template>\n  <div :class=\"[{ 'Modal--off': !isModalOpen }, { Modal: isModalOpen }]\">\n    <div class=\"ModalArea\">\n      <div class=\"ModalHeaderArea\">\n        <div class=\"HeaderArea\">\n          <div class=\"HeaderArea__titile\">設定</div>\n          <div class=\"HeaderArea__close\" @click=\"clickClose\">\n            <span class=\"close\"></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"ModalContenArea\">\n        <div\n          v-for=\"(contentItem, contentItemIdx) in modalContentList\"\n          :key=\"contentItemIdx\"\n          class=\"ContentArea\"\n          :class=\"contentItem.style\"\n        >\n          <div class=\"ContentArea__title\">{{ contentItem.title }}</div>\n          <div class=\"ContentArea__description\">\n            {{ contentItem.description }}\n          </div>\n          <div class=\"ContentArea__select-area\">\n            <div\n              v-for=\"(selectItem, selectItemIdx) in contentItem.selectList\"\n              :key=\"selectItemIdx\"\n              class=\"ContentAreaSelectBlock\"\n              :class=\"{\n                'ContentAreaSelectBlock--selected': selectItem.selected,\n              }\"\n              @click=\"clickItem(contentItem.id, selectItem)\"\n            >\n              <div\n                class=\"ContentAreaSelectBlock__label\"\n                :class=\"selectItem.style\"\n              >\n                {{ selectItem.label }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive } from \"vue\";\nimport { SettingContentType, SelectContent } from \"@/interface/settingContent\";\nimport store from \"@/store\";\nimport _ from \"lodash\";\n//多言語\n// import i18n from \"@/i18n/locales/index\";\nimport {} from \"vee-validate\";\n// import ja from \"vee-validate/dist\";\n// import en from \"vee-validate/dist/locale/en.json\";\n\nexport default defineComponent({\n  name: \"SettingsContent\",\n  props: {\n    contentList: {\n      type: String,\n      required: true,\n    },\n    isModalOpen: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n  },\n  setup(props, { emit }) {\n    //レンダリング制御:モーダル表示\n    // const isOpen = computed((): boolean => {\n    //   const tempFlg = ref(false);\n    //   if (!props.isModalOpen) {\n    //     nextTick(() => {\n    //       tempFlg.value = false;\n    //     });\n    //   } else {\n    //     tempFlg.value = true;\n    //   }\n    //   return tempFlg.value;\n    // });\n    const modalContentList = ref<SettingContentType[]>([\n      {\n        id: 1,\n        title: \"ライトモード / ダークモード\",\n        description: \"ライトモード、ダークモードを選択できます。\",\n        style: \"\",\n        selectList: [\n          {\n            id: 1,\n            label: \"ライトモード\",\n            value: \"lightMode\",\n            selected: true,\n            style: \"\",\n          },\n          {\n            id: 2,\n            label: \"ダークモード\",\n            value: \"darkMode\",\n            selected: false,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        id: 2,\n        title: \"言語設定\",\n        description: \"日本語、英語を選択できます。\",\n        style: \"\",\n        selectList: [\n          {\n            id: 1,\n            label: \"日本語\",\n            value: \"japanase\",\n            selected: true,\n            style: \"\",\n          },\n          {\n            id: 2,\n            label: \"英語\",\n            value: \"english\",\n            selected: false,\n            style: \"\",\n          },\n        ],\n      },\n    ]);\n\n    //言語（store）\n    const storeLanguge = store.getters.language;\n    //モード（store）\n    const storeDisplayMode = store.getters.displayMode;\n\n    //初期レンダリング時、storeから値取得し、選択状況を判定する。\n\n    //選択中となっている物を更新\n    const changeSelectedValue = (mainId: number, subId: number) => {\n      // const idx = modalContentList.value.findIndex((item: SelectContent) =>\n      //   _.isEqual(item.id, mainId)\n      // );\n      // for (const item of modalContentList.value[idx].selectList) {\n      //   if (_.isEqual(item.id, subId)) {\n      //     item.selected = true;\n      //   } else {\n      //     item.selected = false;\n      //   }\n      // }\n    };\n\n    //言語設定\n    // const changeLanguage = (id: number) => {\n    //   //日本語\n    //   if (id === 1) {\n    //     localize(i18n.locale, \"ja\");\n    //     //英語\n    //   } else if (id === 2) {\n    //   }\n    // };\n\n    //ライトモード、ダークモードの設定\n    const changeMode = (id: number) => {\n      const html = document.documentElement;\n      if (id === 1) {\n        html.classList.add(\"light-mode\");\n        html.classList.remove(\"dark-mode\");\n      } else if (id === 2) {\n        html.classList.remove(\"light-mode\");\n        html.classList.add(\"dark-mode\");\n      } else {\n        html.classList.add(\"light-mode\");\n        html.classList.remove(\"dark-mode\");\n      }\n    };\n\n    //言語、モード切り替え時\n    const clickItem = (id: number, item: SelectContent) => {\n      if (item.selected) {\n        return;\n      }\n      const tenpLang = reactive({\n        id: 1,\n        value: \"\",\n      });\n      tenpLang.id = item.id;\n      tenpLang.value = item.value;\n      store.getters.language;\n      if (id === 1) {\n        //モード切り替え\n        changeMode(item.id);\n        store.commit(\"setDisplayMode\", tenpLang);\n      } else if (id === 2) {\n        store.commit(\"setLanguage\", tenpLang);\n      }\n      changeSelectedValue(id, item.id);\n    };\n\n    const clickClose = () => {\n      emit(\"clickClose\");\n    };\n\n    //初期レンダリング時、storeから値取得し、選択状況を判定する。\n    //モード\n    changeSelectedValue(1, storeDisplayMode.id);\n    changeMode(storeDisplayMode.id);\n    //言語\n    changeSelectedValue(2, storeLanguge.id);\n\n    // watch(\n    //   isOpen,\n    //   (oldVal, newVal) => {\n    //     console.log(\"test\");\n    //     if (oldVal) {\n    //       // isOpen.value = oldVal;\n    //       setTimeout(() => {\n    //         // isOpen.value = newVal;\n    //       }, 1000 * 5);\n    //     }\n    //   },\n    //   { deep: true }\n    // );\n\n    return { clickItem, modalContentList, clickClose };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","/Users/andoyusuke/portfolio_ando/src/components/organisms/WorksContent.vue",["105","106","107"],"<template>\n  <div class=\"WorksContentArea\">\n    <div\n      class=\"WorksContentMenu\"\n      :class=\"{ 'WorksContentMenu--no_img': isImgShow }\"\n    >\n      <div\n        v-for=\"(contentItem, contentItemIdx) in worksContentList\"\n        :key=\"contentItemIdx\"\n        class=\"WorksContentMenu__item\"\n      >\n        <div class=\"WorksContentDetail__img\" @click=\"clickWork(contentItem)\">\n          <img\n            v-if=\"!$_.isEmpty(contentItem.src)\"\n            :src=\"contentItem.src\"\n            alt=\"\"\n            :class=\"{ selected: contentItem.selected }\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"WorksContentDetailArea\">\n      <div\n        v-for=\"(selectedItem, selectedItemIdx) in worksContentList\"\n        :key=\"selectedItemIdx\"\n        class=\"WorksContentDetail\"\n      >\n        <div\n          v-if=\"selectedItem.selected\"\n          class=\"WorksContentDetail__content\"\n          :class=\"{ 'WorksContentDetail__content--no_img': !isImgShow }\"\n        >\n          <div v-if=\"isImgShow\" class=\"WorksContentDetail__img\">\n            <img\n              v-if=\"!$_.isEmpty(selectedItem.src)\"\n              :src=\"selectedItem.src\"\n              alt=\"\"\n            />\n          </div>\n          <div\n            class=\"WorksContentDetailStack\"\n            :class=\"{ 'WorksContentDetailStack--no_md_top': !isImgShow }\"\n          >\n            <div class=\"WorksContentDetailStack__title\" id=\"workCompany\">\n              会社名\n            </div>\n            <div class=\"WorksContentDetailStack__content\">\n              <div class=\"WorksContentDetail__title\">\n                <div class=\"title\" v-if=\"!$_.isEmpty(selectedItem.title)\">\n                  {{ selectedItem.title }}\n                </div>\n                <div v-if=\"!$_.isEmpty(selectedItem.subTitle)\" class=\"caption\">\n                  {{ selectedItem.subTitle }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"WorksContentDetailStack\">\n            <div class=\"WorksContentDetailStack__title\" id=\"workDiscription\">\n              説明\n            </div>\n            <div class=\"WorksContentDetailStack__content\">\n              <div class=\"WorksContentDetail__discription\">\n                <div\n                  v-if=\"!$_.isEmpty(selectedItem.description)\"\n                  class=\"WorksContentDetail__discription--text\"\n                >\n                  {{ selectedItem.description }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"WorksContentDetailStack--vertical\" id=\"workPhase\">\n            <div class=\"WorksContentDetailStack__title--vertical\">\n              開発フェーズ\n            </div>\n            <div class=\"WorksContentDetailStack__content--vertical\">\n              <div class=\"WorksContentDevelopmentPhaseArea\">\n                <div class=\"WorksContentDevelopmentPhase__content\">\n                  <div class=\"DevelopmentPhaseTable\">\n                    <div class=\"DevelopmentPhaseTableHeader\">\n                      <div class=\"DevelopmentPhaseTable__header\">要件定義</div>\n                      <div class=\"DevelopmentPhaseTable__header\">基本設計</div>\n                      <div class=\"DevelopmentPhaseTable__header\">詳細設計</div>\n                      <div class=\"DevelopmentPhaseTable__header\">\n                        開発・製造\n                      </div>\n                      <div class=\"DevelopmentPhaseTable__header\">\n                        単体テスト\n                      </div>\n                      <div class=\"DevelopmentPhaseTable__header\">\n                        結合テスト\n                      </div>\n                      <div class=\"DevelopmentPhaseTable__header\">\n                        総合テスト\n                      </div>\n                      <div class=\"DevelopmentPhaseTable__header\">\n                        保守・運用\n                      </div>\n                    </div>\n                    <div class=\"DevelopmentPhaseTableContent\">\n                      <div class=\"DevelopmentPhase\">\n                        <div class=\"DevelopmentPhaseItem\">\n                          <div\n                            v-if=\"selectedItem.developmentPhase.definition\"\n                            class=\"DevelopmentPhaseItem__on\"\n                          ></div>\n                        </div>\n                        <div class=\"DevelopmentPhaseItem\">\n                          <div\n                            v-if=\"selectedItem.developmentPhase.basicDesign\"\n                            class=\"DevelopmentPhaseItem__on\"\n                          ></div>\n                        </div>\n                        <div class=\"DevelopmentPhaseItem\">\n                          <div\n                            v-if=\"selectedItem.developmentPhase.detailDesign\"\n                            class=\"DevelopmentPhaseItem__on\"\n                          ></div>\n                        </div>\n                        <div class=\"DevelopmentPhaseItem\">\n                          <div\n                            v-if=\"selectedItem.developmentPhase.coding\"\n                            class=\"DevelopmentPhaseItem__on\"\n                          ></div>\n                        </div>\n                        <div class=\"DevelopmentPhaseItem\">\n                          <div\n                            v-if=\"selectedItem.developmentPhase.unitTest\"\n                            class=\"DevelopmentPhaseItem__on\"\n                          ></div>\n                        </div>\n                        <div class=\"DevelopmentPhaseItem\">\n                          <div\n                            v-if=\"selectedItem.developmentPhase.combinedTest\"\n                            class=\"DevelopmentPhaseItem__on\"\n                          ></div>\n                        </div>\n                        <div class=\"DevelopmentPhaseItem\">\n                          <div\n                            v-if=\"selectedItem.developmentPhase.maintenance\"\n                            class=\"DevelopmentPhaseItem__on\"\n                          ></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- <div class=\"WorksContentDetailStack\">\n            <div class=\"WorksContentDetailStack__title\">期間</div>\n            <div class=\"WorksContentDetailStack__content\">\n              <div class=\"WorksContentDetail__period\">\n                <div\n                  v-if=\"!$_.isEmpty(selectedItem.period)\"\n                  class=\"WorksContentDetail__period--text\"\n                >\n                  {{ selectedItem.period }}\n                </div>\n              </div>\n            </div>\n          </div> -->\n          <div class=\"WorksContentDetailStack--vertical\">\n            <div class=\"WorksContentDetailStack__title--vertical\">実績</div>\n            <div class=\"WorksContentDetailStack__content--vertical\">\n              <div class=\"WorksContentAchievementArea\">\n                <div class=\"WorksContentAchievement__content\">\n                  <div class=\"AchievementTable\">\n                    <div class=\"AchievementTableHeader\">\n                      <div class=\"AchievementTable__header\">項目</div>\n                      <div class=\"AchievementTable__header\">内容</div>\n                      <div class=\"AchievementTable__header\">\n                        対応実績 (対応数 / チーム担当数)\n                      </div>\n                    </div>\n                    <div\n                      class=\"AchievementTableContent\"\n                      :style=\"{ height: workTableHeight + 'px' }\"\n                    >\n                      <div\n                        v-for=\"(item, itemIdx) in selectedItem.achievementList\"\n                        :key=\"itemIdx\"\n                        class=\"AchievementList\"\n                        :class=\"item.style\"\n                      >\n                        <div class=\"AchievementList--label\">\n                          {{ item.label }}\n                        </div>\n\n                        <div class=\"AchievementList--description\">\n                          {{ item.description }}\n                        </div>\n\n                        <div class=\"AchievementList--archievement\">\n                          {{ item.archievement }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  reactive,\n  computed,\n  PropType,\n  watch,\n  onMounted,\n} from \"vue\";\nimport { WorksContentType } from \"@/interface/worksContent\";\n\nexport default defineComponent({\n  name: \"WorksContent\",\n  props: {\n    worksContentList: {\n      type: Array as PropType<WorksContentType[]>,\n      required: true,\n    },\n    isImgShow: {\n      type: Boolean,\n      required: true,\n      default: true,\n    },\n  },\n  setup(props, { emit }) {\n    const workTableHeight = ref(0);\n\n    const changeTableBodyHeight = () => {\n      const workCompany = document.getElementById(\"workCompany\");\n      const workDiscription = document.getElementById(\"workDiscription\");\n      const workPhase = document.getElementById(\"workPhase\");\n      const totalHeight = ref(0);\n      if (workCompany != null && workDiscription != null && workPhase != null) {\n        totalHeight.value =\n          workCompany.offsetHeight +\n          workDiscription.offsetHeight +\n          workPhase.offsetHeight;\n        console.log(workPhase.offsetHeight);\n      }\n      //marginと「実績」、テーブルヘッダーの高さ\n      totalHeight.value += 32 + 8 + 30 + 16 + 32;\n\n      workTableHeight.value = 450 - totalHeight.value;\n    };\n    onMounted(() => {\n      changeTableBodyHeight();\n    });\n\n    // const workTableHeight = computed(() => {\n    //   const workCompany = document.getElementById(\"workCompany\");\n    //   const workDiscription = document.getElementById(\"workDiscription\");\n    //   const totalHeight = ref(0);\n    //   if (workCompany != null && workDiscription != null) {\n    //     console.log(\"workCompany.offsetHeight\");\n    //     console.log(workCompany.offsetHeight);\n    //     console.log(workDiscription.offsetHeight);\n    //     totalHeight.value =\n    //       workCompany.offsetHeight + workDiscription.offsetHeight;\n    //   }\n    //   //marginと「実績」、テーブルヘッダーの高さ\n    //   totalHeight.value += 55;\n\n    //   return 450 - totalHeight.value;\n    // });\n\n    const clickWork = (item: WorksContentType) => {\n      emit(\"clickWork\", item);\n    };\n    watch(props.worksContentList, () => {\n      changeTableBodyHeight();\n    });\n    return { clickWork, workTableHeight };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","/Users/andoyusuke/portfolio_ando/src/components/organisms/ContentBlock.vue",["108","109"],"<template>\n  <div class=\"Content--Area\">\n    <div\n      v-for=\"(contentItem, contentItemIdx) in contentList\"\n      :key=\"contentItemIdx\"\n      class=\"Content--Area__item\"\n    >\n      <div class=\"Content--Area__title\">\n        <div class=\"title\" v-if=\"!$_.isEmpty(contentItem.title)\">\n          {{ contentItem.title }}\n        </div>\n        <div v-if=\"!$_.isEmpty(contentItem.subTitle)\" class=\"captopn\">\n          {{ contentItem.subTitle }}\n        </div>\n      </div>\n      <div class=\"Content--Area__content\">\n        <img\n          v-if=\"!$_.isEmpty(contentItem.src)\"\n          :src=\"contentItem.src\"\n          alt=\"\"\n        />\n        <div v-if=\"!$_.isEmpty(contentItem.label)\" class=\"Content--Area__text\">\n          <span\n            v-if=\"contentItem.selectable\"\n            :class=\"contentItem.style\"\n            @clilck=\"clickContent(contentItem)\"\n            >{{ contentItem.label }}</span\n          >\n          <span v-else :class=\"contentItem.style\">{{ contentItem.label }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, PropType } from \"vue\";\nimport { ContentType } from \"@/interface/contentBlock\";\n\nexport default defineComponent({\n  name: \"ContentBlock\",\n  props: {\n    contentList: {\n      type: Array as PropType<ContentType[]>,\n      required: true,\n    },\n  },\n  setup(props, { emit }) {\n    const clickContent = (item: ContentType) => {\n      emit(\"clickContent\", item);\n    };\n    return { clickContent };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","/Users/andoyusuke/portfolio_ando/src/components/organisms/SkillContent.vue",["110","111"],"<template>\n  <div class=\"SkillArea\">\n    <div class=\"SkillHeader\">\n      <div class=\"SkillHeader__title\">\n        <div class=\"SkillHeader__title-icon\">\n          <div class=\"Icon\" :class=\"skillContent.iconClass\"></div>\n        </div>\n        <div class=\"SkillHeader__title-txt\">{{ $t(skillContent.title) }}</div>\n      </div>\n      <div class=\"SkillHeader__description\">\n        <span>{{ $t(skillContent.description) }}</span>\n      </div>\n    </div>\n    <div class=\"SkillContent\">\n      <div class=\"SkillContentHeader\">\n        <div class=\"SkillContentHeader__label\">\n          {{ $t(\"skill.common.label\") }}\n        </div>\n        <div class=\"SkillContentHeader__experience\">\n          {{ $t(\"skill.common.experience\") }}\n        </div>\n        <div class=\"SkillContentHeader__level\">\n          {{ $t(\"skill.common.level\") }}\n        </div>\n      </div>\n      <div\n        v-for=\"(item, itemIdx) in skillContent.contentList\"\n        :key=\"itemIdx\"\n        class=\"SkillContentItem\"\n        :class=\"item.style\"\n      >\n        <div class=\"SkillContentItem__label\">{{ item.label }}</div>\n        <div class=\"SkillContentItem__experience\">\n          {{ $t(item.experience) }} {{ $t(\"skill.common.year\") }}\n        </div>\n        <div class=\"SkillContentItem__level\">\n          <div\n            v-for=\"(number, numberIdx) in 5\"\n            :key=\"numberIdx\"\n            class=\"Icon Icon--s16 Icon--skill\"\n            :class=\"{ 'Icon--skill__on': item.level >= number }\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, PropType } from \"vue\";\nimport { SkillContentType } from \"@/interface/skillContent\";\n\nexport default defineComponent({\n  name: \"SkillContent\",\n  props: {\n    skillContent: {\n      type: Object as PropType<SkillContentType>,\n      required: true,\n    },\n  },\n  setup(props, { emit }) {\n    const clickContent = () => {\n      emit(\"clickContent\");\n    };\n    return { clickContent };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n",{"ruleId":"112","severity":1,"message":"113","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":11},{"ruleId":"112","severity":1,"message":"116","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":13},{"ruleId":"112","severity":1,"message":"117","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":52,"column":7,"nodeType":"114","messageId":"115","endLine":52,"endColumn":17},{"ruleId":"112","severity":1,"message":"119","line":55,"column":32,"nodeType":"114","messageId":"115","endLine":55,"endColumn":40},{"ruleId":"112","severity":1,"message":"120","line":79,"column":9,"nodeType":"114","messageId":"115","endLine":79,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":598,"column":11,"nodeType":"114","messageId":"115","endLine":598,"endColumn":23},{"ruleId":"112","severity":1,"message":"122","line":598,"column":27,"nodeType":"114","messageId":"115","endLine":598,"endColumn":44},{"ruleId":"123","severity":1,"message":"124","line":599,"column":7,"nodeType":"125","messageId":"126","endLine":599,"endColumn":18},{"ruleId":"112","severity":1,"message":"119","line":31,"column":32,"nodeType":"114","messageId":"115","endLine":31,"endColumn":40},{"ruleId":"112","severity":1,"message":"120","line":50,"column":9,"nodeType":"114","messageId":"115","endLine":50,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":50,"column":9,"nodeType":"114","messageId":"115","endLine":50,"endColumn":14},{"ruleId":"112","severity":1,"message":"127","line":17,"column":27,"nodeType":"114","messageId":"115","endLine":17,"endColumn":30},{"ruleId":"112","severity":1,"message":"119","line":17,"column":32,"nodeType":"114","messageId":"115","endLine":17,"endColumn":40},{"ruleId":"112","severity":1,"message":"127","line":9,"column":27,"nodeType":"114","messageId":"115","endLine":9,"endColumn":30},{"ruleId":"112","severity":1,"message":"119","line":9,"column":32,"nodeType":"114","messageId":"115","endLine":9,"endColumn":40},{"ruleId":"112","severity":1,"message":"128","line":9,"column":42,"nodeType":"114","messageId":"115","endLine":9,"endColumn":50},{"ruleId":"112","severity":1,"message":"129","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":21},{"ruleId":"112","severity":1,"message":"127","line":66,"column":27,"nodeType":"114","messageId":"115","endLine":66,"endColumn":30},{"ruleId":"112","severity":1,"message":"119","line":66,"column":32,"nodeType":"114","messageId":"115","endLine":66,"endColumn":40},{"ruleId":"112","severity":1,"message":"130","line":51,"column":8,"nodeType":"114","messageId":"115","endLine":51,"endColumn":9},{"ruleId":"112","severity":1,"message":"131","line":139,"column":34,"nodeType":"114","messageId":"115","endLine":139,"endColumn":48},{"ruleId":"112","severity":1,"message":"132","line":139,"column":50,"nodeType":"114","messageId":"115","endLine":139,"endColumn":63},{"ruleId":"112","severity":1,"message":"119","line":216,"column":3,"nodeType":"114","messageId":"115","endLine":216,"endColumn":11},{"ruleId":"112","severity":1,"message":"133","line":217,"column":3,"nodeType":"114","messageId":"115","endLine":217,"endColumn":11},{"ruleId":"123","severity":1,"message":"124","line":250,"column":9,"nodeType":"125","messageId":"126","endLine":250,"endColumn":20},{"ruleId":"112","severity":1,"message":"127","line":37,"column":27,"nodeType":"114","messageId":"115","endLine":37,"endColumn":30},{"ruleId":"112","severity":1,"message":"119","line":37,"column":32,"nodeType":"114","messageId":"115","endLine":37,"endColumn":40},{"ruleId":"112","severity":1,"message":"127","line":50,"column":27,"nodeType":"114","messageId":"115","endLine":50,"endColumn":30},{"ruleId":"112","severity":1,"message":"119","line":50,"column":32,"nodeType":"114","messageId":"115","endLine":50,"endColumn":40},"@typescript-eslint/no-unused-vars","'Vue' is defined but never used.","Identifier","unusedVar","'dayjs' is defined but never used.","'duration' is defined but never used.","'routerBase' is assigned a value but never used.","'reactive' is defined but never used.","'props' is defined but never used.","'clickContent' is assigned a value but never used.","'item' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'ref' is defined but never used.","'PropType' is defined but never used.","'ContentType' is defined but never used.","'_' is defined but never used.","'mainId' is defined but never used.","'subId' is defined but never used.","'computed' is defined but never used."]