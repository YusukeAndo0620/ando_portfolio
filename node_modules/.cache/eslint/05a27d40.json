[{"/Users/andoyusuke/portfolio_ando_local/src/main.ts":"1","/Users/andoyusuke/portfolio_ando_local/src/App.vue":"2","/Users/andoyusuke/portfolio_ando_local/src/i18n/locales/index.ts":"3","/Users/andoyusuke/portfolio_ando_local/src/router/index.ts":"4","/Users/andoyusuke/portfolio_ando_local/src/store/index.ts":"5","/Users/andoyusuke/portfolio_ando_local/src/views/home/index.vue":"6","/Users/andoyusuke/portfolio_ando_local/src/views/home/Home.vue":"7","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/Stack.vue":"8","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/NavigationBar.vue":"9","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/AboutContent.vue":"10","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/WorksContent.vue":"11","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/SkillContent.vue":"12","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/ContactContent.vue":"13","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/Footer.vue":"14","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/modal/Settings.vue":"15"},{"size":614,"mtime":1650104349452,"results":"16","hashOfConfig":"17"},{"size":773,"mtime":1650100269012,"results":"18","hashOfConfig":"17"},{"size":352,"mtime":1650105060280,"results":"19","hashOfConfig":"17"},{"size":1510,"mtime":1653747597027,"results":"20","hashOfConfig":"17"},{"size":725,"mtime":1650117151095,"results":"21","hashOfConfig":"17"},{"size":221,"mtime":1650101571590,"results":"22","hashOfConfig":"17"},{"size":24424,"mtime":1653644845989,"results":"23","hashOfConfig":"17"},{"size":981,"mtime":1653629125780,"results":"24","hashOfConfig":"17"},{"size":1382,"mtime":1653227393108,"results":"25","hashOfConfig":"17"},{"size":2561,"mtime":1653110298577,"results":"26","hashOfConfig":"17"},{"size":10830,"mtime":1653641322582,"results":"27","hashOfConfig":"17"},{"size":2006,"mtime":1653473584002,"results":"28","hashOfConfig":"17"},{"size":1577,"mtime":1653642819186,"results":"29","hashOfConfig":"17"},{"size":366,"mtime":1652606700387,"results":"30","hashOfConfig":"17"},{"size":6597,"mtime":1651043650722,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"1ohckhd",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"/Users/andoyusuke/portfolio_ando_local/src/main.ts",["68","69","70"],"import { createApp } from \"vue\";\nimport Vue from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport _ from \"lodash\";\nimport i18n from \"./i18n/locales/index\";\nimport dayjs from \"dayjs\";\nimport duration from \"dayjs/plugin/duration\";\n// import VueCompositionApi from \"@vue/composition-api\";\nimport \"@/assets/scss/style.scss\";\nconst app = createApp(App);\napp.use(store).use(router).use(_).use(i18n).mount(\"#app\");\n\napp.config.globalProperties.$_ = _;\napp.provide(\"_\", _);\n// Vue.prototype.$_ = _;\n// app.use(prototype)\n\n// VueCompositionApi.prototype.$dayjs = dayjs\n","/Users/andoyusuke/portfolio_ando_local/src/App.vue",[],"/Users/andoyusuke/portfolio_ando_local/src/i18n/locales/index.ts",[],"/Users/andoyusuke/portfolio_ando_local/src/router/index.ts",["71","72","73","74","75","76","77"],"import {\n  createRouter,\n  createMemoryHistory,\n  createWebHistory,\n  RouteRecordRaw,\n} from \"vue-router\";\nimport HomeView from \"../views/home/index.vue\";\nimport AboutView from \"../views/about/index.vue\";\nimport WorksView from \"../views/works/index.vue\";\nimport ContactView from \"../views/contact/index.vue\";\nimport Home from \"../views/home/Home.vue\";\nimport About from \"../views/about/About.vue\";\nimport Works from \"../views/works/Works.vue\";\nimport Contact from \"../views/contact/Contact.vue\";\n\nconst baseUrl = \"ando_portfolio\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: \"/\",\n    component: HomeView,\n    children: [\n      {\n        path: \"\",\n        name: \"Home\",\n        component: Home,\n      },\n    ],\n  },\n  // {\n  //   path: \"/about\",\n  //   component: AboutView,\n  //   children: [\n  //     {\n  //       path: \"\",\n  //       name: \"About\",\n  //       component: About,\n  //     },\n  //   ],\n  // },\n  // {\n  //   path: \"/works\",\n  //   component: WorksView,\n  //   children: [\n  //     {\n  //       path: \"\",\n  //       name: \"Works\",\n  //       component: Works,\n  //     },\n  //   ],\n  // },\n  // {\n  //   path: \"/contact\",\n  //   component: ContactView,\n  //   children: [\n  //     {\n  //       path: \"\",\n  //       name: \"Contact\",\n  //       component: Contact,\n  //     },\n  //   ],\n  // },\n];\n\nconst routerBase = createMemoryHistory(baseUrl);\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n// export default router; routerBase;\n","/Users/andoyusuke/portfolio_ando_local/src/store/index.ts",[],"/Users/andoyusuke/portfolio_ando_local/src/views/home/index.vue",[],"/Users/andoyusuke/portfolio_ando_local/src/views/home/Home.vue",["78"],"<template>\n  <NavigationBar\n    :navigationList=\"navigationList\"\n    @clickNavigate=\"clickNavigate\"\n  />\n  <div class=\"Main\" :class=\"{ 'MainContennt--modal_open': isSettingOpen }\">\n    <div\n      id=\"home\"\n      class=\"Main--content\"\n      @click=\"isSettingOpen = false\"\n      @wheel=\"scrollDisplay\"\n    >\n      <div class=\"MainContentImgArea\">\n        <div class=\"MainContentImg\">\n          <img src=\"/assets/img/back_1.jpg\" alt=\"\" />\n        </div>\n      </div>\n      <Stack\n        :isShowFlg=\"isAboutShow\"\n        title=\"About\"\n        titleStyle=\"Content__title--mt24\"\n        contentId=\"about\"\n      >\n        <template #content>\n          <AboutContent :aboutContent=\"aboutContent\" :isHistoryShow=\"true\" />\n        </template>\n      </Stack>\n      <Stack :isShowFlg=\"isSkillShow\" title=\"SKill\" contentId=\"skill\">\n        <template #content>\n          <div class=\"SkillContentArea\">\n            <SkillContent\n              v-for=\"(skillContent, skillContentidx) in skillContentList\"\n              :key=\"skillContentidx\"\n              :skillContent=\"skillContent\"\n            />\n            <div class=\"SkillDescriptionArea\">\n              <div class=\"SkillDescriptionContent\">\n                <div class=\"SkillDescriptionContent__item\">\n                  <div class=\"SkillDescriptionContentItem__icon\">\n                    <div\n                      v-for=\"(number, numberIdx) in 5\"\n                      :key=\"numberIdx\"\n                      class=\"Icon Icon--s16 Icon--skill Icon--skill__on\"\n                    ></div>\n                  </div>\n                  <div class=\"SkillDescriptionContentItem__txt\">\n                    <span v-html=\"$t('skill.skillDescription.level5')\"></span>\n                  </div>\n                </div>\n                <div class=\"SkillDescriptionContent__item\">\n                  <div class=\"SkillDescriptionContentItem__icon\">\n                    <div\n                      v-for=\"(number, numberIdx) in 4\"\n                      :key=\"numberIdx\"\n                      class=\"Icon Icon--s16 Icon--skill Icon--skill__on\"\n                    ></div>\n                  </div>\n                  <div class=\"SkillDescriptionContentItem__txt\">\n                    <span v-html=\"$t('skill.skillDescription.level4')\"></span>\n                  </div>\n                </div>\n                <div class=\"SkillDescriptionContent__item\">\n                  <div class=\"SkillDescriptionContentItem__icon\">\n                    <div\n                      v-for=\"(number, numberIdx) in 3\"\n                      :key=\"numberIdx\"\n                      class=\"Icon Icon--s16 Icon--skill Icon--skill__on\"\n                    ></div>\n                  </div>\n                  <div class=\"SkillDescriptionContentItem__txt\">\n                    <span v-html=\"$t('skill.skillDescription.level3')\"></span>\n                  </div>\n                </div>\n                <div class=\"SkillDescriptionContent__item\">\n                  <div class=\"SkillDescriptionContentItem__icon\">\n                    <div\n                      v-for=\"(number, numberIdx) in 2\"\n                      :key=\"numberIdx\"\n                      class=\"Icon Icon--s16 Icon--skill Icon--skill__on\"\n                    ></div>\n                  </div>\n                  <div class=\"SkillDescriptionContentItem__txt\">\n                    <span v-html=\"$t('skill.skillDescription.level2')\"></span>\n                  </div>\n                </div>\n                <div class=\"SkillDescriptionContent__item\">\n                  <div class=\"SkillDescriptionContentItem__icon\">\n                    <div\n                      v-for=\"(number, numberIdx) in 1\"\n                      :key=\"numberIdx\"\n                      class=\"Icon Icon--s16 Icon--skill Icon--skill__on\"\n                    ></div>\n                  </div>\n                  <div class=\"SkillDescriptionContentItem__txt\">\n                    <span v-html=\"$t('skill.skillDescription.level1')\"></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </template>\n      </Stack>\n      <Stack :isShowFlg=\"isWorksShow\" title=\"Works\" contentId=\"works\">\n        <template #content>\n          <WorksContent\n            :worksContentList=\"worksContentList\"\n            :isImgShow=\"false\"\n            @clickWork=\"clickWork\"\n          />\n        </template>\n      </Stack>\n      <Stack\n        :isShowFlg=\"isContactShow\"\n        title=\"Contact\"\n        titleStyle=\"Content__title--mt24\"\n        contentId=\"contact\"\n      >\n        <template #content>\n          <ContactContent @clickContent=\"clickContent\" />\n        </template>\n      </Stack>\n    </div>\n    <SettingModal\n      v-if=\"isModalOpen\"\n      :isModalOpen=\"isSettingOpen\"\n      @clickClose=\"isSettingOpen = false\"\n    />\n    <Footer v-if=\"isContactShow\" />\n  </div>\n</template>\n\n<script sertup lang=\"ts\">\nimport { defineComponent, ref, reactive, watch, onMounted } from \"vue\";\nimport router from \"@/router\";\nimport NavigationBar from \"@/components/organisms/NavigationBar.vue\";\nimport Stack from \"@/components/organisms/Stack.vue\";\nimport AboutContent from \"@/components/organisms/AboutContent.vue\";\nimport WorksContent from \"@/components/organisms/WorksContent.vue\";\nimport SkillContent from \"@/components/organisms/SkillContent.vue\";\nimport ContactContent from \"@/components/organisms/ContactContent.vue\";\n\nimport SettingModal from \"@/components/organisms/modal/Settings.vue\";\nimport Footer from \"@/components/organisms/Footer.vue\";\nimport _ from \"lodash\";\nimport { NavigationType } from \"@/interface/navigation\";\nimport { AboutContentType } from \"@/interface/aboutContent\";\nimport { WorksContentType } from \"@/interface/worksContent\";\nimport { SkillContentType } from \"@/interface/skillContent\";\n\nexport default defineComponent({\n  name: \"HomeView\",\n  components: {\n    NavigationBar,\n    Stack,\n    WorksContent,\n    AboutContent,\n    SkillContent,\n    ContactContent,\n    SettingModal,\n    Footer,\n  },\n  setup() {\n    //About表示フラグ\n    const isAboutShow = ref(true);\n    //Skill表示フラグ\n    const isSkillShow = ref(false);\n    //Works表示フラグ\n    const isWorksShow = ref(false);\n    //Works表示フラグ\n    const isContactShow = ref(false);\n\n    //モーダル表示フラグ\n    const isModalOpen = ref(false);\n    //設定モーダル表示フラグ\n    const isSettingOpen = ref(false);\n\n    const navigationList = ref<NavigationType[]>([\n      {\n        label: \"Home\",\n        id: \"home\",\n        eventName: \"nabigateHome\",\n        routerName: \"Home\",\n        style: \"\",\n        selected: true,\n      },\n      {\n        label: \"About\",\n        id: \"about\",\n        eventName: \"nabigateAbout\",\n        routerName: \"About\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Works\",\n        id: \"works\",\n        eventName: \"nabigateWorks\",\n        routerName: \"Works\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Contact\",\n        id: \"contact\",\n        eventName: \"nabigateContact\",\n        routerName: \"Contact\",\n        style: \"\",\n        selected: false,\n      },\n      {\n        label: \"Settings\",\n        id: \"settings\",\n        eventName: \"openSettings\",\n        routerName: \"Settings\",\n        style: \"\",\n        selected: false,\n      },\n    ]);\n\n    const aboutContent = reactive<AboutContentType>({\n      title: \"About\",\n      src: \"/assets/img/profile.png\",\n      style: \"\",\n      introductionList: [\n        {\n          label: \"about.introduction.name.label\",\n          description: \"about.introduction.name.description\",\n          style: \"\",\n        },\n        {\n          label: \"about.introduction.birthday.label\",\n          description: \"about.introduction.birthday.description\",\n          style: \"\",\n        },\n        {\n          label: \"about.introduction.from.label\",\n          description: \"about.introduction.from.description\",\n          style: \"\",\n        },\n        {\n          label: \"about.introduction.finalEducation.label\",\n          description: \"about.introduction.finalEducation.description\",\n          style: \"\",\n        },\n        {\n          label: \"about.introduction.programminglanguage.label\",\n          description: \"about.introduction.programminglanguage.description\",\n          style: \"\",\n        },\n        {\n          label: \"about.introduction.framework.label\",\n          description: \"about.introduction.framework.description\",\n          style: \"\",\n        },\n      ],\n      aboutHistoryList: [\n        {\n          year: \"about.history.content1.year\",\n          description: \"about.history.content1.description\",\n          style: \"\",\n        },\n        {\n          year: \"about.history.content2.year\",\n          description: \"about.history.content2.description\",\n          style: \"\",\n        },\n        {\n          year: \"about.history.content3.year\",\n          description: \"about.history.content3.description\",\n          style: \"\",\n        },\n        {\n          year: \"about.history.content4.year\",\n          description: \"about.history.content4.description\",\n          style: \"\",\n        },\n        {\n          year: \"about.history.content5.year\",\n          description: \"about.history.content5.description\",\n          style: \"\",\n        },\n        {\n          year: \"about.history.content6.year\",\n          description: \"about.history.content6.description\",\n          style: \"\",\n        },\n      ],\n    });\n\n    const skillContentList = ref<SkillContentType[]>([\n      {\n        title: \"skill.language.title\",\n        description: \"skill.language.description\",\n        iconClass: \"Icon--program\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"HTML\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"CSS\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"Javascript\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"Typescript\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"SCSS\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"Java\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"skill.others.title\",\n        description: \"skill.others.description\",\n        iconClass: \"Icon--pc\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"Slack\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"ZOOM\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"VSCode\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n\n          {\n            label: \"Teams\",\n            experience: 1,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"SorceTree\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"TortoseGit\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"figma\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"A5\",\n            experience: 2,\n            level: 3,\n            style: \"\",\n          },\n          {\n            label: \"eclipse\",\n            experience: 2,\n            level: 3,\n            style: \"\",\n          },\n          {\n            label: \"intelij\",\n            experience: 1,\n            level: 3,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"skill.frontend.title\",\n        description: \"skill.frontend.description\",\n        iconClass: \"Icon--program\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"Vue.js(Vue3)\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"Edge.js\",\n            experience: 1,\n            level: 2,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"skill.backend.title\",\n        description: \"skill.backend.description\",\n        iconClass: \"Icon--program\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"Spring Boot\",\n            experience: 2,\n            level: 4,\n            style: \"\",\n          },\n          {\n            label: \"Struts\",\n            experience: 1,\n            level: 2,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"skill.db.title\",\n        description: \"skill.db.description\",\n        iconClass: \"Icon--db\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"MySQL\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"Mybatis\",\n            experience: 2,\n            level: 5,\n            style: \"\",\n          },\n          {\n            label: \"Oracle\",\n            experience: 1,\n            level: 3,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        title: \"skill.infra.title\",\n        description: \"skill.infra.description\",\n        iconClass: \"Icon--infra\",\n        style: \"\",\n        contentList: [\n          {\n            label: \"aws(EC2, S3 etc)\",\n            experience: 2,\n            level: 2,\n            style: \"\",\n          },\n        ],\n      },\n    ]);\n\n    const worksContentList = ref<WorksContentType[]>([\n      {\n        id: 1,\n        title: \"works.content1.title\",\n        subTitle: \"works.content1.subTitle\",\n        description: \"works.content1.description\",\n        period: \"works.content1.period\",\n        src: \"/assets/img/life_insurance.jpeg\",\n        style: \"\",\n        selected: true,\n        developmentPhase: {\n          definition: false,\n          basicDesign: false,\n          detailDesign: false,\n          coding: true,\n          unitTest: true,\n          integrationTest: true,\n          systemTest: false,\n          maintenance: false,\n        },\n        achievementList: [\n          {\n            label: \"works.content1.achievementList1.label\",\n            description: \"works.content1.achievementList1.description\",\n            archievement: \"works.content1.achievementList1.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content1.achievementList2.label\",\n            description: \"works.content1.achievementList2.description\",\n            archievement: \"works.content1.achievementList2.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content1.achievementList3.label\",\n            description: \"works.content1.achievementList3.description\",\n            archievement: \"works.content1.achievementList3.archievement\",\n            style: \"\",\n          },\n        ],\n      },\n      {\n        id: 2,\n        title: \"works.content2.title\",\n        subTitle: \"works.content2.subTitle\",\n        description: \"works.content2.description\",\n        period: \"works.content2.period\",\n        src: \"/assets/img/file_share.jpeg\",\n        style: \"\",\n        selected: false,\n        developmentPhase: {\n          definition: false,\n          basicDesign: true,\n          detailDesign: true,\n          coding: true,\n          unitTest: true,\n          integrationTest: false,\n          systemTest: false,\n          maintenance: false,\n        },\n        achievementList: [\n          {\n            label: \"works.content2.achievementList1.label\",\n            description: \"works.content2.achievementList1.description\",\n            archievement: \"works.content2.achievementList1.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content2.achievementList2.label\",\n            description: \"works.content2.achievementList2.description\",\n            archievement: \"works.content2.achievementList2.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content2.achievementList3.label\",\n            description: \"works.content2.achievementList3.description\",\n            archievement: \"works.content2.achievementList3.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content2.achievementList4.label\",\n            description: \"works.content2.achievementList4.description\",\n            archievement: \"works.content2.achievementList4.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content2.achievementList5.label\",\n            description: \"works.content2.achievementList5.description\",\n            archievement: \"works.content2.achievementList5.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content2.achievementList6.label\",\n            description: \"works.content2.achievementList6.description\",\n            archievement: \"works.content2.achievementList6.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content2.achievementList7.label\",\n            description: \"works.content2.achievementList7.description\",\n            archievement: \"works.content2.achievementList7.archievement\",\n            style: \"\",\n          },\n        ],\n      },\n      {\n        id: 3,\n        title: \"works.content3.title\",\n        subTitle: \"works.content3.subTitle\",\n        description: \"works.content3.description\",\n        period: \"works.content3.period\",\n        src: \"/assets/img/supermarket.jpeg\",\n        style: \"\",\n        selected: false,\n        developmentPhase: {\n          definition: false,\n          basicDesign: false,\n          detailDesign: false,\n          coding: true,\n          unitTest: true,\n          integrationTest: true,\n          systemTest: false,\n          maintenance: false,\n        },\n        achievementList: [\n          {\n            label: \"works.content3.achievementList1.label\",\n            description: \"works.content3.achievementList1.description\",\n            archievement: \"works.content3.achievementList1.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content3.achievementList2.label\",\n            description: \"works.content3.achievementList2.description\",\n            archievement: \"works.content3.achievementList2.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content3.achievementList3.label\",\n            description: \"works.content3.achievementList3.description\",\n            archievement: \"works.content3.achievementList3.archievement\",\n            style: \"\",\n          },\n          {\n            label: \"works.content3.achievementList4.label\",\n            description: \"works.content3.achievementList4.description\",\n            archievement: \"works.content3.achievementList4.archievement\",\n            style: \"\",\n          },\n        ],\n      },\n    ]);\n\n    //スクロール時のナビゲーション選択状態変更\n    const chengeNavChecked = (targetId: string) => {\n      // const targetId = ref(\"\");\n      // if (targetY > 2960) {\n      //   targetId.value = \"contact\";\n      // } else if (targetY > 2200) {\n      //   targetId.value = \"works\";\n      // } else if (targetY > 460) {\n      //   targetId.value = \"about\";\n      // } else {\n      //   targetId.value = \"home\";\n      // }\n      for (const item of navigationList.value) {\n        if (_.isEqual(item.id, targetId)) {\n          item.selected = true;\n        } else {\n          item.selected = false;\n        }\n      }\n    };\n\n    //ナビゲーションクリック\n    const clickNavigate = (eventName: string) => {\n      for (const item of navigationList.value) {\n        if (_.isEqual(item.eventName, eventName) && item.selected) {\n          return;\n        } else if (_.isEqual(item.eventName, eventName)) {\n          const target = document.getElementById(item.id);\n          if (target != null) {\n            const blueLeft = target.getBoundingClientRect().left;\n            const blueTop =\n              window.pageYOffset + target.getBoundingClientRect().top - 50;\n            switch (eventName) {\n              case \"nabigateWorks\":\n                if (isWorksShow.value) {\n                  window.scrollTo({\n                    left: blueLeft,\n                    top: blueTop,\n                    behavior: \"smooth\",\n                  });\n                }\n                break;\n              case \"nabigateContact\":\n                if (isContactShow.value) {\n                  window.scrollTo({\n                    left: blueLeft,\n                    top: blueTop,\n                    behavior: \"smooth\",\n                  });\n                }\n                break;\n              default:\n                window.scrollTo({\n                  left: blueLeft,\n                  top: blueTop,\n                  behavior: \"smooth\",\n                });\n            }\n            item.selected = true;\n          } else {\n            switch (eventName) {\n              case navigationList.value[4].eventName:\n                isSettingOpen.value = !isSettingOpen.value;\n                break;\n              default:\n            }\n          }\n        } else {\n          item.selected = false;\n        }\n      }\n    };\n\n    //work選択\n    const clickWork = (item: WorksContentType) => {\n      for (const workItem of worksContentList.value) {\n        if (_.isEqual(item.id, workItem.id)) {\n          workItem.selected = true;\n        } else {\n          workItem.selected = false;\n        }\n      }\n    };\n\n    //スクロール\n    const scrollDisplay = () => {\n      const targetY = window.scrollY;\n      if (targetY === null) {\n        return;\n      }\n      //属性取得\n      const aboutTarget = document.getElementById(\"about\");\n      const skillTarget = document.getElementById(\"skill\");\n      const worksTarget = document.getElementById(\"works\");\n      const contactTarget = document.getElementById(\"contact\");\n\n      //位置取得\n      const aboutPosition = ref();\n      const skillPosition = ref();\n      const worksPosition = ref();\n      const contactPosition = ref();\n\n      const targetId = ref(\"home\");\n\n      if (aboutTarget != null) {\n        aboutPosition.value =\n          window.pageYOffset + aboutTarget.getBoundingClientRect().top - 49;\n      }\n      if (skillTarget != null) {\n        skillPosition.value =\n          window.pageYOffset + skillTarget.getBoundingClientRect().top - 49;\n      }\n      if (worksTarget != null) {\n        worksPosition.value =\n          window.pageYOffset + worksTarget.getBoundingClientRect().top - 49;\n      }\n      if (contactTarget != null) {\n        contactPosition.value =\n          window.pageYOffset + contactTarget.getBoundingClientRect().top - 200;\n      }\n\n      if (targetY > aboutPosition.value) {\n        targetId.value = \"about\";\n        if (!isAboutShow.value) {\n          isAboutShow.value = true;\n        }\n      }\n\n      if (targetY > skillPosition.value - 300) {\n        targetId.value = \"about\";\n        if (!isSkillShow.value) isSkillShow.value = true;\n      }\n\n      if (targetY > worksPosition.value - 400) {\n        if (!isWorksShow.value) {\n          isWorksShow.value = true;\n        }\n        if (targetY > worksPosition.value) {\n          targetId.value = \"works\";\n        }\n      }\n      if (targetY > contactPosition.value - 400) {\n        if (!isContactShow.value) {\n          isContactShow.value = true;\n        }\n        if (targetY > contactPosition.value) {\n          targetId.value = \"contact\";\n        }\n      }\n\n      chengeNavChecked(targetId.value);\n    };\n\n    //モーダル状態監視\n    watch(isSettingOpen, (newVal, oldVal) => {\n      if (oldVal) {\n        setTimeout(() => {\n          isModalOpen.value = newVal;\n        }, 1000 * 0.3);\n      } else {\n        isModalOpen.value = newVal;\n      }\n    });\n\n    //画面上部に移動\n    onMounted(() => {\n      window.scrollTo(0, 0);\n    });\n\n    return {\n      isAboutShow,\n      isSkillShow,\n      isWorksShow,\n      isContactShow,\n      isModalOpen,\n      isSettingOpen,\n      navigationList,\n      aboutContent,\n      worksContentList,\n      skillContentList,\n      scrollDisplay,\n      clickWork,\n      clickNavigate,\n    };\n  },\n});\n</script>\n","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/Stack.vue",[],"/Users/andoyusuke/portfolio_ando_local/src/components/organisms/NavigationBar.vue",[],"/Users/andoyusuke/portfolio_ando_local/src/components/organisms/AboutContent.vue",["79","80"],"<template>\n  <div class=\"AboutContentArea\">\n    <div class=\"AboutContentArea__introduction\">\n      <div class=\"IntroductionArea\">\n        <div class=\"IntroductionImg\">\n          <img\n            v-if=\"!$_.isEmpty(aboutContent.src)\"\n            :src=\"aboutContent.src\"\n            alt=\"\"\n          />\n        </div>\n        <div class=\"IntroductionContent\">\n          <div\n            v-for=\"(\n              introduction, introductionIdx\n            ) in aboutContent.introductionList\"\n            :key=\"introductionIdx\"\n            class=\"Introduction\"\n            :class=\"introduction.style\"\n          >\n            <div class=\"Introduction__label\">{{ $t(introduction.label) }}</div>\n            <div class=\"Introduction__description\">\n              {{ $t(introduction.description) }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"isHistoryShow\" class=\"AboutContentArea__history\">\n      <table class=\"HistoryTable\">\n        <thead>\n          <tr class=\"HistoryHeader_line\">\n            <th>\n              <div class=\"HistoryTable__header\">\n                {{ $t(\"about.history.year\") }}\n              </div>\n            </th>\n            <th>\n              <div class=\"HistoryTable__header\">\n                {{ $t(\"about.history.content\") }}\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody class=\"HistoryTableContent\">\n          <tr\n            v-for=\"(item, itemIdx) in aboutContent.aboutHistoryList\"\n            :key=\"itemIdx\"\n            class=\"History\"\n            :class=\"item.style\"\n          >\n            <td>\n              <div class=\"History__label\">\n                {{ $t(item.year) }}\n              </div>\n            </td>\n            <td>\n              <div\n                v-html=\"$t(item.description)\"\n                class=\"HistoryList__description\"\n              ></div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, PropType } from \"vue\";\nimport { AboutContentType } from \"@/interface/aboutContent\";\n\nexport default defineComponent({\n  name: \"AboutContent\",\n  props: {\n    aboutContent: {\n      type: Object as PropType<AboutContentType>,\n      required: true,\n    },\n    isHistoryShow: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  setup(props, { emit }) {\n    const clickContent = () => {\n      emit(\"clickContent\");\n    };\n    return { clickContent };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/WorksContent.vue",[],"/Users/andoyusuke/portfolio_ando_local/src/components/organisms/SkillContent.vue",[],"/Users/andoyusuke/portfolio_ando_local/src/components/organisms/ContactContent.vue",["81","82"],"<template>\n  <div class=\"ContactArea\">\n    <div class=\"ContactArea__header\">\n      <div class=\"ContactHeader__description\">\n        {{ $t(\"contact.description\") }}\n      </div>\n    </div>\n    <div class=\"ContactArea__content\">\n      <div class=\"ContactContentBtnArea\">\n        <div class=\"ContactContentBtnArea__btn\" @click=\"sendMail\">\n          <div class=\"ContactContentBtnArea__btn-Area\">\n            <div\n              class=\"ContactContentBtnArea__icon Icon Icon--s24 Icon--mail\"\n            ></div>\n            <div class=\"ContactContentBtnArea__msg\">\n              {{ $t(\"contact.message\") }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"ContactContent__description\">\n        {{ $t(\"contact.contentDescription\") }}\n        {{ $t(\"contact.part\") }}@{{ $t(\"contact.domail\") }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\";\n\nexport default defineComponent({\n  name: \"ContactContent\",\n  props: {\n    isHistoryShow: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  setup(props, { emit }) {\n    const sendMail = () => {\n      const address = ref(\"\");\n      const subject = ref(\"\");\n      const body = ref(\"\");\n\n      address.value = \"ando08620@gmail.com\";\n      subject.value = \"\";\n      body.value = \"\";\n\n      location.href =\n        \"mailto:\" +\n        address.value +\n        \"?subject=\" +\n        subject.value +\n        \"&body=\" +\n        body.value;\n    };\n    return { sendMail };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n","/Users/andoyusuke/portfolio_ando_local/src/components/organisms/Footer.vue",[],"/Users/andoyusuke/portfolio_ando_local/src/components/organisms/modal/Settings.vue",["83"],"<template>\n  <div :class=\"[{ 'Modal--off': !isModalOpen }, { Modal: isModalOpen }]\">\n    <div class=\"ModalArea\">\n      <div class=\"ModalHeaderArea\">\n        <div class=\"HeaderArea\">\n          <div class=\"HeaderArea__titile\">{{ $t(\"setting.title\") }}</div>\n          <div class=\"HeaderArea__close\" @click=\"clickClose\">\n            <span class=\"close\"></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"ModalContenArea\">\n        <div\n          v-for=\"(contentItem, contentItemIdx) in modalContentList\"\n          :key=\"contentItemIdx\"\n          class=\"ContentArea\"\n          :class=\"contentItem.style\"\n        >\n          <div class=\"ContentArea__title\">{{ $t(contentItem.title) }}</div>\n          <div class=\"ContentArea__description\">\n            {{ $t(contentItem.description) }}\n          </div>\n          <div class=\"ContentArea__select-area\">\n            <div\n              v-for=\"(selectItem, selectItemIdx) in contentItem.selectList\"\n              :key=\"selectItemIdx\"\n              class=\"ContentAreaSelectBlock\"\n              :class=\"{\n                'ContentAreaSelectBlock--selected': selectItem.selected,\n              }\"\n              @click=\"clickItem(contentItem.id, selectItem)\"\n            >\n              <div\n                class=\"ContentAreaSelectBlock__label\"\n                :class=\"selectItem.style\"\n              >\n                {{ $t(selectItem.label) }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive } from \"vue\";\nimport { SettingContentType, SelectContent } from \"@/interface/settingContent\";\nimport store from \"@/store\";\nimport _ from \"lodash\";\n//多言語\nimport i18n from \"@/i18n/locales/index\";\nimport { localize } from \"@vee-validate/i18n\";\nimport en from \"@vee-validate/i18n/dist/locale/en.json\";\nimport ja from \"@vee-validate/i18n/dist/locale/ja.json\";\nlocalize({\n  en,\n  ja,\n});\n\nexport default defineComponent({\n  name: \"SettingsContent\",\n  props: {\n    contentList: {\n      type: String,\n      required: true,\n    },\n    isModalOpen: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n  },\n  setup(props, { emit }) {\n    //レンダリング制御:モーダル表示\n    // const isOpen = computed((): boolean => {\n    //   const tempFlg = ref(false);\n    //   if (!props.isModalOpen) {\n    //     nextTick(() => {\n    //       tempFlg.value = false;\n    //     });\n    //   } else {\n    //     tempFlg.value = true;\n    //   }\n    //   return tempFlg.value;\n    // });\n    const modalContentList = ref<SettingContentType[]>([\n      {\n        id: 1,\n        title: \"setting.mode.title\",\n        description: \"setting.mode.description\",\n        style: \"\",\n        selectList: [\n          {\n            id: 1,\n            label: \"setting.mode.lightMode\",\n            value: \"lightMode\",\n            selected: true,\n            style: \"\",\n          },\n          {\n            id: 2,\n            label: \"setting.mode.darkMode\",\n            value: \"darkMode\",\n            selected: false,\n            style: \"\",\n          },\n        ],\n      },\n      {\n        id: 2,\n        title: \"setting.language.title\",\n        description: \"setting.language.description\",\n        style: \"\",\n        selectList: [\n          {\n            id: 1,\n            label: \"setting.language.japanese\",\n            value: \"ja\",\n            selected: true,\n            style: \"\",\n          },\n          {\n            id: 2,\n            label: \"setting.language.english\",\n            value: \"en\",\n            selected: false,\n            style: \"\",\n          },\n        ],\n      },\n    ]);\n\n    //言語（store）\n    const storeLanguge = store.getters.language;\n    //モード（store）\n    const storeDisplayMode = store.getters.displayMode;\n\n    //初期レンダリング時、storeから値取得し、選択状況を判定する。\n\n    //選択中となっている物を更新\n    const changeSelectedValue = (mainId: number, subId: number) => {\n      const idx = modalContentList.value.findIndex((item: SettingContentType) =>\n        _.isEqual(item.id, mainId)\n      );\n      for (const item of modalContentList.value[idx].selectList) {\n        if (_.isEqual(item.id, subId)) {\n          item.selected = true;\n        } else {\n          item.selected = false;\n        }\n      }\n    };\n\n    //言語設定\n    const changeLanguage = (id: number) => {\n      //日本語\n      if (id === 1) {\n        i18n.global.locale = \"ja\";\n        localize(\"ja\", ja);\n        //英語\n      } else if (id === 2) {\n        localize(\"en\", en);\n        i18n.global.locale = \"en\";\n      }\n    };\n\n    //ライトモード、ダークモードの設定\n    const changeMode = (id: number) => {\n      const html = document.documentElement;\n      if (id === 1) {\n        html.classList.add(\"light-mode\");\n        html.classList.remove(\"dark-mode\");\n      } else if (id === 2) {\n        html.classList.remove(\"light-mode\");\n        html.classList.add(\"dark-mode\");\n      } else {\n        html.classList.add(\"light-mode\");\n        html.classList.remove(\"dark-mode\");\n      }\n    };\n\n    //言語、モード切り替え時\n    const clickItem = (id: number, item: SelectContent) => {\n      if (item.selected) {\n        return;\n      }\n      const tempObj = reactive({\n        id: 1,\n        value: \"\",\n      });\n      tempObj.id = item.id;\n      tempObj.value = item.value;\n\n      if (id === 1) {\n        //モード切り替え\n        changeMode(item.id);\n        store.commit(\"setDisplayMode\", tempObj);\n      } else if (id === 2) {\n        //言語切り替え\n        changeLanguage(item.id);\n        store.commit(\"setLanguage\", tempObj);\n      }\n      changeSelectedValue(id, item.id);\n    };\n\n    const clickClose = () => {\n      emit(\"clickClose\");\n    };\n\n    //初期レンダリング時、storeから値取得し、選択状況を判定する。\n    //モード\n    changeSelectedValue(1, storeDisplayMode.id);\n    changeMode(storeDisplayMode.id);\n    console.log(storeDisplayMode.id);\n    //言語\n    changeSelectedValue(2, storeLanguge.id);\n    changeLanguage(storeLanguge.id);\n\n    // watch(\n    //   isOpen,\n    //   (oldVal, newVal) => {\n    //     console.log(\"test\");\n    //     if (oldVal) {\n    //       // isOpen.value = oldVal;\n    //       setTimeout(() => {\n    //         // isOpen.value = newVal;\n    //       }, 1000 * 5);\n    //     }\n    //   },\n    //   { deep: true }\n    // );\n\n    return { clickItem, modalContentList, clickClose };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n",{"ruleId":"84","severity":1,"message":"85","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":11},{"ruleId":"84","severity":1,"message":"88","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":13},{"ruleId":"84","severity":1,"message":"89","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":16},{"ruleId":"84","severity":1,"message":"90","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":17},{"ruleId":"84","severity":1,"message":"91","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":17},{"ruleId":"84","severity":1,"message":"92","line":10,"column":8,"nodeType":"86","messageId":"87","endLine":10,"endColumn":19},{"ruleId":"84","severity":1,"message":"93","line":12,"column":8,"nodeType":"86","messageId":"87","endLine":12,"endColumn":13},{"ruleId":"84","severity":1,"message":"94","line":13,"column":8,"nodeType":"86","messageId":"87","endLine":13,"endColumn":13},{"ruleId":"84","severity":1,"message":"95","line":14,"column":8,"nodeType":"86","messageId":"87","endLine":14,"endColumn":15},{"ruleId":"84","severity":1,"message":"96","line":65,"column":7,"nodeType":"86","messageId":"87","endLine":65,"endColumn":17},{"ruleId":"84","severity":1,"message":"97","line":134,"column":8,"nodeType":"86","messageId":"87","endLine":134,"endColumn":14},{"ruleId":"84","severity":1,"message":"98","line":71,"column":27,"nodeType":"86","messageId":"87","endLine":71,"endColumn":30},{"ruleId":"84","severity":1,"message":"99","line":71,"column":32,"nodeType":"86","messageId":"87","endLine":71,"endColumn":40},{"ruleId":"84","severity":1,"message":"100","line":41,"column":9,"nodeType":"86","messageId":"87","endLine":41,"endColumn":14},{"ruleId":"84","severity":1,"message":"101","line":41,"column":18,"nodeType":"86","messageId":"87","endLine":41,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":216,"column":5,"nodeType":"104","messageId":"105","endLine":216,"endColumn":16},"@typescript-eslint/no-unused-vars","'Vue' is defined but never used.","Identifier","unusedVar","'dayjs' is defined but never used.","'duration' is defined but never used.","'AboutView' is defined but never used.","'WorksView' is defined but never used.","'ContactView' is defined but never used.","'About' is defined but never used.","'Works' is defined but never used.","'Contact' is defined but never used.","'routerBase' is assigned a value but never used.","'router' is defined but never used.","'ref' is defined but never used.","'reactive' is defined but never used.","'props' is defined but never used.","'emit' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected"]