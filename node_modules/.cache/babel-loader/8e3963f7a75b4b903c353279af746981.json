{"ast":null,"code":"/*!\n  * core-base v9.2.0-beta.35\n  * (c) 2022 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { isObject, isNumber, isString, isFunction, isPlainObject, toDisplayString, format, isArray, isBoolean, assign, isRegExp, warn, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey, isEmptyObject, isDate, getGlobalThis } from '@intlify/shared';\nimport { defaultOnError, baseCompile, CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\nimport { IntlifyDevToolsHooks } from '@intlify/devtools-if';\nconst pathStateMachine = [];\npathStateMachine[0\n/* BEFORE_PATH */\n] = {\n  [\"w\"\n  /* WORKSPACE */\n  ]: [0\n  /* BEFORE_PATH */\n  ],\n  [\"i\"\n  /* IDENT */\n  ]: [3\n  /* IN_IDENT */\n  , 0\n  /* APPEND */\n  ],\n  [\"[\"\n  /* LEFT_BRACKET */\n  ]: [4\n  /* IN_SUB_PATH */\n  ],\n  [\"o\"\n  /* END_OF_FAIL */\n  ]: [7\n  /* AFTER_PATH */\n  ]\n};\npathStateMachine[1\n/* IN_PATH */\n] = {\n  [\"w\"\n  /* WORKSPACE */\n  ]: [1\n  /* IN_PATH */\n  ],\n  [\".\"\n  /* DOT */\n  ]: [2\n  /* BEFORE_IDENT */\n  ],\n  [\"[\"\n  /* LEFT_BRACKET */\n  ]: [4\n  /* IN_SUB_PATH */\n  ],\n  [\"o\"\n  /* END_OF_FAIL */\n  ]: [7\n  /* AFTER_PATH */\n  ]\n};\npathStateMachine[2\n/* BEFORE_IDENT */\n] = {\n  [\"w\"\n  /* WORKSPACE */\n  ]: [2\n  /* BEFORE_IDENT */\n  ],\n  [\"i\"\n  /* IDENT */\n  ]: [3\n  /* IN_IDENT */\n  , 0\n  /* APPEND */\n  ],\n  [\"0\"\n  /* ZERO */\n  ]: [3\n  /* IN_IDENT */\n  , 0\n  /* APPEND */\n  ]\n};\npathStateMachine[3\n/* IN_IDENT */\n] = {\n  [\"i\"\n  /* IDENT */\n  ]: [3\n  /* IN_IDENT */\n  , 0\n  /* APPEND */\n  ],\n  [\"0\"\n  /* ZERO */\n  ]: [3\n  /* IN_IDENT */\n  , 0\n  /* APPEND */\n  ],\n  [\"w\"\n  /* WORKSPACE */\n  ]: [1\n  /* IN_PATH */\n  , 1\n  /* PUSH */\n  ],\n  [\".\"\n  /* DOT */\n  ]: [2\n  /* BEFORE_IDENT */\n  , 1\n  /* PUSH */\n  ],\n  [\"[\"\n  /* LEFT_BRACKET */\n  ]: [4\n  /* IN_SUB_PATH */\n  , 1\n  /* PUSH */\n  ],\n  [\"o\"\n  /* END_OF_FAIL */\n  ]: [7\n  /* AFTER_PATH */\n  , 1\n  /* PUSH */\n  ]\n};\npathStateMachine[4\n/* IN_SUB_PATH */\n] = {\n  [\"'\"\n  /* SINGLE_QUOTE */\n  ]: [5\n  /* IN_SINGLE_QUOTE */\n  , 0\n  /* APPEND */\n  ],\n  [\"\\\"\"\n  /* DOUBLE_QUOTE */\n  ]: [6\n  /* IN_DOUBLE_QUOTE */\n  , 0\n  /* APPEND */\n  ],\n  [\"[\"\n  /* LEFT_BRACKET */\n  ]: [4\n  /* IN_SUB_PATH */\n  , 2\n  /* INC_SUB_PATH_DEPTH */\n  ],\n  [\"]\"\n  /* RIGHT_BRACKET */\n  ]: [1\n  /* IN_PATH */\n  , 3\n  /* PUSH_SUB_PATH */\n  ],\n  [\"o\"\n  /* END_OF_FAIL */\n  ]: 8\n  /* ERROR */\n  ,\n  [\"l\"\n  /* ELSE */\n  ]: [4\n  /* IN_SUB_PATH */\n  , 0\n  /* APPEND */\n  ]\n};\npathStateMachine[5\n/* IN_SINGLE_QUOTE */\n] = {\n  [\"'\"\n  /* SINGLE_QUOTE */\n  ]: [4\n  /* IN_SUB_PATH */\n  , 0\n  /* APPEND */\n  ],\n  [\"o\"\n  /* END_OF_FAIL */\n  ]: 8\n  /* ERROR */\n  ,\n  [\"l\"\n  /* ELSE */\n  ]: [5\n  /* IN_SINGLE_QUOTE */\n  , 0\n  /* APPEND */\n  ]\n};\npathStateMachine[6\n/* IN_DOUBLE_QUOTE */\n] = {\n  [\"\\\"\"\n  /* DOUBLE_QUOTE */\n  ]: [4\n  /* IN_SUB_PATH */\n  , 0\n  /* APPEND */\n  ],\n  [\"o\"\n  /* END_OF_FAIL */\n  ]: 8\n  /* ERROR */\n  ,\n  [\"l\"\n  /* ELSE */\n  ]: [6\n  /* IN_DOUBLE_QUOTE */\n  , 0\n  /* APPEND */\n  ]\n};\n/**\r\n * Check if an expression is a literal value.\r\n */\n\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n/**\r\n * Strip quotes from a string\r\n */\n\n\nfunction stripQuotes(str) {\n  const a = str.charCodeAt(0);\n  const b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\r\n * Determine the type of a character in a keypath.\r\n */\n\n\nfunction getPathCharType(ch) {\n  if (ch === undefined || ch === null) {\n    return \"o\"\n    /* END_OF_FAIL */\n    ;\n  }\n\n  const code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5b: // [\n\n    case 0x5d: // ]\n\n    case 0x2e: // .\n\n    case 0x22: // \"\n\n    case 0x27:\n      // '\n      return ch;\n\n    case 0x5f: // _\n\n    case 0x24: // $\n\n    case 0x2d:\n      // -\n      return \"i\"\n      /* IDENT */\n      ;\n\n    case 0x09: // Tab (HT)\n\n    case 0x0a: // Newline (LF)\n\n    case 0x0d: // Return (CR)\n\n    case 0xa0: // No-break space (NBSP)\n\n    case 0xfeff: // Byte Order Mark (BOM)\n\n    case 0x2028: // Line Separator (LS)\n\n    case 0x2029:\n      // Paragraph Separator (PS)\n      return \"w\"\n      /* WORKSPACE */\n      ;\n  }\n\n  return \"i\"\n  /* IDENT */\n  ;\n}\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\n\n\nfunction formatSubPath(path) {\n  const trimmed = path.trim(); // invalid leading 0\n\n  if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n    return false;\n  }\n\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : \"*\"\n  /* ASTARISK */\n  + trimmed;\n}\n/**\r\n * Parse a string path into an array of segments\r\n */\n\n\nfunction parse(path) {\n  const keys = [];\n  let index = -1;\n  let mode = 0\n  /* BEFORE_PATH */\n  ;\n  let subPathDepth = 0;\n  let c;\n  let key; // eslint-disable-line\n\n  let newChar;\n  let type;\n  let transition;\n  let action;\n  let typeMap;\n  const actions = [];\n\n  actions[0\n  /* APPEND */\n  ] = () => {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[1\n  /* PUSH */\n  ] = () => {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[2\n  /* INC_SUB_PATH_DEPTH */\n  ] = () => {\n    actions[0\n    /* APPEND */\n    ]();\n    subPathDepth++;\n  };\n\n  actions[3\n  /* PUSH_SUB_PATH */\n  ] = () => {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = 4\n      /* IN_SUB_PATH */\n      ;\n      actions[0\n      /* APPEND */\n      ]();\n    } else {\n      subPathDepth = 0;\n\n      if (key === undefined) {\n        return false;\n      }\n\n      key = formatSubPath(key);\n\n      if (key === false) {\n        return false;\n      } else {\n        actions[1\n        /* PUSH */\n        ]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    const nextChar = path[index + 1];\n\n    if (mode === 5\n    /* IN_SINGLE_QUOTE */\n    && nextChar === \"'\"\n    /* SINGLE_QUOTE */\n    || mode === 6\n    /* IN_DOUBLE_QUOTE */\n    && nextChar === \"\\\"\"\n    /* DOUBLE_QUOTE */\n    ) {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[0\n      /* APPEND */\n      ]();\n      return true;\n    }\n  }\n\n  while (mode !== null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap[\"l\"\n    /* ELSE */\n    ] || 8\n    /* ERROR */\n    ; // check parse error\n\n    if (transition === 8\n    /* ERROR */\n    ) {\n      return;\n    }\n\n    mode = transition[0];\n\n    if (transition[1] !== undefined) {\n      action = actions[transition[1]];\n\n      if (action) {\n        newChar = c;\n\n        if (action() === false) {\n          return;\n        }\n      }\n    } // check parse finish\n\n\n    if (mode === 7\n    /* AFTER_PATH */\n    ) {\n      return keys;\n    }\n  }\n} // path token cache\n\n\nconst cache = new Map();\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\n\nfunction resolveWithKeyValue(obj, path) {\n  return isObject(obj) ? obj[path] : null;\n}\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\n\n\nfunction resolveValue(obj, path) {\n  // check object\n  if (!isObject(obj)) {\n    return null;\n  } // parse path\n\n\n  let hit = cache.get(path);\n\n  if (!hit) {\n    hit = parse(path);\n\n    if (hit) {\n      cache.set(path, hit);\n    }\n  } // check hit\n\n\n  if (!hit) {\n    return null;\n  } // resolve path value\n\n\n  const len = hit.length;\n  let last = obj;\n  let i = 0;\n\n  while (i < len) {\n    const val = last[hit[i]];\n\n    if (val === undefined) {\n      return null;\n    }\n\n    last = val;\n    i++;\n  }\n\n  return last;\n}\n\nconst DEFAULT_MODIFIER = str => str;\n\nconst DEFAULT_MESSAGE = ctx => ''; // eslint-disable-line\n\n\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\n\nconst DEFAULT_NORMALIZE = values => values.length === 0 ? '' : values.join('');\n\nconst DEFAULT_INTERPOLATE = toDisplayString;\n\nfunction pluralDefault(choice, choicesLength) {\n  choice = Math.abs(choice);\n\n  if (choicesLength === 2) {\n    // prettier-ignore\n    return choice ? choice > 1 ? 1 : 0 : 1;\n  }\n\n  return choice ? Math.min(choice, 2) : 0;\n}\n\nfunction getPluralIndex(options) {\n  // prettier-ignore\n  const index = isNumber(options.pluralIndex) ? options.pluralIndex : -1; // prettier-ignore\n\n  return options.named && (isNumber(options.named.count) || isNumber(options.named.n)) ? isNumber(options.named.count) ? options.named.count : isNumber(options.named.n) ? options.named.n : index : index;\n}\n\nfunction normalizeNamed(pluralIndex, props) {\n  if (!props.count) {\n    props.count = pluralIndex;\n  }\n\n  if (!props.n) {\n    props.n = pluralIndex;\n  }\n}\n\nfunction createMessageContext(options = {}) {\n  const locale = options.locale;\n  const pluralIndex = getPluralIndex(options);\n  const pluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? options.pluralRules[locale] : pluralDefault;\n  const orgPluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? pluralDefault : undefined;\n\n  const plural = messages => messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n\n  const _list = options.list || [];\n\n  const list = index => _list[index]; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  const _named = options.named || {};\n\n  isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n\n  const named = key => _named[key];\n\n  function message(key) {\n    // prettier-ignore\n    const msg = isFunction(options.messages) ? options.messages(key) : isObject(options.messages) ? options.messages[key] : false;\n    return !msg ? options.parent ? options.parent.message(key) // resolve from parent messages\n    : DEFAULT_MESSAGE : msg;\n  }\n\n  const _modifier = name => options.modifiers ? options.modifiers[name] : DEFAULT_MODIFIER;\n\n  const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize) ? options.processor.normalize : DEFAULT_NORMALIZE;\n  const interpolate = isPlainObject(options.processor) && isFunction(options.processor.interpolate) ? options.processor.interpolate : DEFAULT_INTERPOLATE;\n\n  const linked = (key, modifier) => {\n    const msg = message(key)(ctx);\n    return isString(modifier) ? _modifier(modifier)(msg) : msg;\n  };\n\n  const type = isPlainObject(options.processor) && isString(options.processor.type) ? options.processor.type : DEFAULT_MESSAGE_DATA_TYPE;\n  const ctx = {\n    [\"list\"\n    /* LIST */\n    ]: list,\n    [\"named\"\n    /* NAMED */\n    ]: named,\n    [\"plural\"\n    /* PLURAL */\n    ]: plural,\n    [\"linked\"\n    /* LINKED */\n    ]: linked,\n    [\"message\"\n    /* MESSAGE */\n    ]: message,\n    [\"type\"\n    /* TYPE */\n    ]: type,\n    [\"interpolate\"\n    /* INTERPOLATE */\n    ]: interpolate,\n    [\"normalize\"\n    /* NORMALIZE */\n    ]: normalize\n  };\n  return ctx;\n}\n\nlet devtools = null;\n\nfunction setDevToolsHook(hook) {\n  devtools = hook;\n}\n\nfunction getDevToolsHook() {\n  return devtools;\n}\n\nfunction initI18nDevTools(i18n, version, meta) {\n  // TODO: queue if devtools is undefined\n  devtools && devtools.emit(IntlifyDevToolsHooks.I18nInit, {\n    timestamp: Date.now(),\n    i18n,\n    version,\n    meta\n  });\n}\n\nconst translateDevTools = /* #__PURE__*/createDevToolsHook(IntlifyDevToolsHooks.FunctionTranslate);\n\nfunction createDevToolsHook(hook) {\n  return payloads => devtools && devtools.emit(hook, payloads);\n}\n\nconst CoreWarnCodes = {\n  NOT_FOUND_KEY: 1,\n  FALLBACK_TO_TRANSLATE: 2,\n  CANNOT_FORMAT_NUMBER: 3,\n  FALLBACK_TO_NUMBER_FORMAT: 4,\n  CANNOT_FORMAT_DATE: 5,\n  FALLBACK_TO_DATE_FORMAT: 6,\n  __EXTEND_POINT__: 7\n};\n/** @internal */\n\nconst warnMessages = {\n  [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n  [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`\n};\n\nfunction getWarnMessage(code, ...args) {\n  return format(warnMessages[code], ...args);\n}\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\n\n\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\n) {\n  // prettier-ignore\n  return [...new Set([start, ...(isArray(fallback) ? fallback : isObject(fallback) ? Object.keys(fallback) : isString(fallback) ? [fallback] : [start])])];\n}\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\n\n\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n  const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n  const context = ctx;\n\n  if (!context.__localeChainCache) {\n    context.__localeChainCache = new Map();\n  }\n\n  let chain = context.__localeChainCache.get(startLocale);\n\n  if (!chain) {\n    chain = []; // first block defined by start\n\n    let block = [start]; // while any intervening block found\n\n    while (isArray(block)) {\n      block = appendBlockToChain(chain, block, fallback);\n    } // prettier-ignore\n    // last block defined by default\n\n\n    const defaults = isArray(fallback) || !isPlainObject(fallback) ? fallback : fallback['default'] ? fallback['default'] : null; // convert defaults to array\n\n    block = isString(defaults) ? [defaults] : defaults;\n\n    if (isArray(block)) {\n      appendBlockToChain(chain, block, false);\n    }\n\n    context.__localeChainCache.set(startLocale, chain);\n  }\n\n  return chain;\n}\n\nfunction appendBlockToChain(chain, block, blocks) {\n  let follow = true;\n\n  for (let i = 0; i < block.length && isBoolean(follow); i++) {\n    const locale = block[i];\n\n    if (isString(locale)) {\n      follow = appendLocaleToChain(chain, block[i], blocks);\n    }\n  }\n\n  return follow;\n}\n\nfunction appendLocaleToChain(chain, locale, blocks) {\n  let follow;\n  const tokens = locale.split('-');\n\n  do {\n    const target = tokens.join('-');\n    follow = appendItemToChain(chain, target, blocks);\n    tokens.splice(-1, 1);\n  } while (tokens.length && follow === true);\n\n  return follow;\n}\n\nfunction appendItemToChain(chain, target, blocks) {\n  let follow = false;\n\n  if (!chain.includes(target)) {\n    follow = true;\n\n    if (target) {\n      follow = target[target.length - 1] !== '!';\n      const locale = target.replace(/!/g, '');\n      chain.push(locale);\n\n      if ((isArray(blocks) || isPlainObject(blocks)) && blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        follow = blocks[locale];\n      }\n    }\n  }\n\n  return follow;\n}\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\n\n\nconst VERSION = '9.2.0-beta.35';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\n\nfunction getDefaultLinkedModifiers() {\n  return {\n    upper: val => isString(val) ? val.toUpperCase() : val,\n    lower: val => isString(val) ? val.toLowerCase() : val,\n    // prettier-ignore\n    capitalize: val => isString(val) ? `${val.charAt(0).toLocaleUpperCase()}${val.substr(1)}` : val\n  };\n}\n\nlet _compiler;\n\nfunction registerMessageCompiler(compiler) {\n  _compiler = compiler;\n}\n\nlet _resolver;\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\n\n\nfunction registerMessageResolver(resolver) {\n  _resolver = resolver;\n}\n\nlet _fallbacker;\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\n\n\nfunction registerLocaleFallbacker(fallbacker) {\n  _fallbacker = fallbacker;\n} // Additional Meta for Intlify DevTools\n\n\nlet _additionalMeta = null;\n\nconst setAdditionalMeta = meta => {\n  _additionalMeta = meta;\n};\n\nconst getAdditionalMeta = () => _additionalMeta;\n\nlet _fallbackContext = null;\n\nconst setFallbackContext = context => {\n  _fallbackContext = context;\n};\n\nconst getFallbackContext = () => _fallbackContext; // ID for CoreContext\n\n\nlet _cid = 0;\n\nfunction createCoreContext(options = {}) {\n  // setup options\n  const version = isString(options.version) ? options.version : VERSION;\n  const locale = isString(options.locale) ? options.locale : DEFAULT_LOCALE;\n  const fallbackLocale = isArray(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || isString(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : locale;\n  const messages = isPlainObject(options.messages) ? options.messages : {\n    [locale]: {}\n  };\n  const datetimeFormats = isPlainObject(options.datetimeFormats) ? options.datetimeFormats : {\n    [locale]: {}\n  };\n  const numberFormats = isPlainObject(options.numberFormats) ? options.numberFormats : {\n    [locale]: {}\n  };\n  const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\n  const pluralRules = options.pluralRules || {};\n  const missing = isFunction(options.missing) ? options.missing : null;\n  const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;\n  const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;\n  const fallbackFormat = !!options.fallbackFormat;\n  const unresolving = !!options.unresolving;\n  const postTranslation = isFunction(options.postTranslation) ? options.postTranslation : null;\n  const processor = isPlainObject(options.processor) ? options.processor : null;\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n  const escapeParameter = !!options.escapeParameter;\n  const messageCompiler = isFunction(options.messageCompiler) ? options.messageCompiler : _compiler;\n  const messageResolver = isFunction(options.messageResolver) ? options.messageResolver : _resolver || resolveWithKeyValue;\n  const localeFallbacker = isFunction(options.localeFallbacker) ? options.localeFallbacker : _fallbacker || fallbackWithSimple;\n  const fallbackContext = isObject(options.fallbackContext) ? options.fallbackContext : undefined;\n  const onWarn = isFunction(options.onWarn) ? options.onWarn : warn; // setup internal options\n\n  const internalOptions = options;\n\n  const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters) ? internalOptions.__datetimeFormatters : new Map();\n\n  const __numberFormatters = isObject(internalOptions.__numberFormatters) ? internalOptions.__numberFormatters : new Map();\n\n  const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n\n  _cid++;\n  const context = {\n    version,\n    cid: _cid,\n    locale,\n    fallbackLocale,\n    messages,\n    modifiers,\n    pluralRules,\n    missing,\n    missingWarn,\n    fallbackWarn,\n    fallbackFormat,\n    unresolving,\n    postTranslation,\n    processor,\n    warnHtmlMessage,\n    escapeParameter,\n    messageCompiler,\n    messageResolver,\n    localeFallbacker,\n    fallbackContext,\n    onWarn,\n    __meta\n  };\n  {\n    context.datetimeFormats = datetimeFormats;\n    context.numberFormats = numberFormats;\n    context.__datetimeFormatters = __datetimeFormatters;\n    context.__numberFormatters = __numberFormatters;\n  } // for vue-devtools timeline event\n\n  if (process.env.NODE_ENV !== 'production') {\n    context.__v_emitter = internalOptions.__v_emitter != null ? internalOptions.__v_emitter : undefined;\n  } // NOTE: experimental !!\n\n\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    initI18nDevTools(context, version, __meta);\n  }\n\n  return context;\n}\n/** @internal */\n\n\nfunction isTranslateFallbackWarn(fallback, key) {\n  return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\n\n\nfunction isTranslateMissingWarn(missing, key) {\n  return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\n\n\nfunction handleMissing(context, key, locale, missingWarn, type) {\n  const {\n    missing,\n    onWarn\n  } = context; // for vue-devtools timeline event\n\n  if (process.env.NODE_ENV !== 'production') {\n    const emitter = context.__v_emitter;\n\n    if (emitter) {\n      emitter.emit(\"missing\"\n      /* MISSING */\n      , {\n        locale,\n        key,\n        type,\n        groupId: `${type}:${key}`\n      });\n    }\n  }\n\n  if (missing !== null) {\n    const ret = missing(context, locale, key, type);\n    return isString(ret) ? ret : key;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && isTranslateMissingWarn(missingWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, {\n        key,\n        locale\n      }));\n    }\n\n    return key;\n  }\n}\n/** @internal */\n\n\nfunction updateFallbackLocale(ctx, locale, fallback) {\n  const context = ctx;\n  context.__localeChainCache = new Map();\n  ctx.localeFallbacker(ctx, fallback, locale);\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\n\nfunction checkHtmlMessage(source, options) {\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n\n  if (warnHtmlMessage && RE_HTML_TAG.test(source)) {\n    warn(format(WARN_MESSAGE, {\n      source\n    }));\n  }\n}\n\nconst defaultOnCacheKey = source => source;\n\nlet compileCache = Object.create(null);\n\nfunction clearCompileCache() {\n  compileCache = Object.create(null);\n}\n\nfunction compileToFunction(source, options = {}) {\n  {\n    // check HTML message\n    process.env.NODE_ENV !== 'production' && checkHtmlMessage(source, options); // check caches\n\n    const onCacheKey = options.onCacheKey || defaultOnCacheKey;\n    const key = onCacheKey(source);\n    const cached = compileCache[key];\n\n    if (cached) {\n      return cached;\n    } // compile error detecting\n\n\n    let occurred = false;\n    const onError = options.onError || defaultOnError;\n\n    options.onError = err => {\n      occurred = true;\n      onError(err);\n    }; // compile\n\n\n    const {\n      code\n    } = baseCompile(source, options); // evaluate function\n\n    const msg = new Function(`return ${code}`)(); // if occurred compile error, don't cache\n\n    return !occurred ? compileCache[key] = msg : msg;\n  }\n}\n\nlet code = CompileErrorCodes.__EXTEND_POINT__;\n\nconst inc = () => ++code;\n\nconst CoreErrorCodes = {\n  INVALID_ARGUMENT: code,\n  INVALID_DATE_ARGUMENT: inc(),\n  INVALID_ISO_DATE_ARGUMENT: inc(),\n  __EXTEND_POINT__: inc() // 18\n\n};\n\nfunction createCoreError(code) {\n  return createCompileError(code, null, process.env.NODE_ENV !== 'production' ? {\n    messages: errorMessages\n  } : undefined);\n}\n/** @internal */\n\n\nconst errorMessages = {\n  [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n  [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' + 'Make sure your Date represents a valid date.',\n  [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string'\n};\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\n\nconst isMessageFunction = val => isFunction(val); // implementation of `translate` function\n\n\nfunction translate(context, ...args) {\n  const {\n    fallbackFormat,\n    postTranslation,\n    unresolving,\n    messageCompiler,\n    fallbackLocale,\n    messages\n  } = context;\n  const [key, options] = parseTranslateArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const escapeParameter = isBoolean(options.escapeParameter) ? options.escapeParameter : context.escapeParameter;\n  const resolvedMessage = !!options.resolvedMessage; // prettier-ignore\n\n  const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n  ? !isBoolean(options.default) ? options.default : !messageCompiler ? () => key : key : fallbackFormat // default by `fallbackFormat` option\n  ? !messageCompiler ? () => key : key : '';\n  const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\n  const locale = isString(options.locale) ? options.locale : context.locale; // escape params\n\n  escapeParameter && escapeParams(options); // resolve message format\n  // eslint-disable-next-line prefer-const\n\n  let [formatScope, targetLocale, message] = !resolvedMessage ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) : [key, locale, messages[locale] || {}]; // NOTE:\n  //  Fix to work around `ssrTransfrom` bug in Vite.\n  //  https://github.com/vitejs/vite/issues/4306\n  //  To get around this, use temporary variables.\n  //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n\n  let format = formatScope; // if you use default message, set it as message format!\n\n  let cacheBaseKey = key;\n\n  if (!resolvedMessage && !(isString(format) || isMessageFunction(format))) {\n    if (enableDefaultMsg) {\n      format = defaultMsgOrKey;\n      cacheBaseKey = format;\n    }\n  } // checking message format and target locale\n\n\n  if (!resolvedMessage && (!(isString(format) || isMessageFunction(format)) || !isString(targetLocale))) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && isString(format) && context.messageCompiler == null) {\n    warn(`The message format compilation is not supported in this build. ` + `Because message compiler isn't included. ` + `You need to pre-compilation all message format. ` + `So translate function return '${key}'.`);\n    return key;\n  } // setup compile error detecting\n\n\n  let occurred = false;\n\n  const errorDetector = () => {\n    occurred = true;\n  }; // compile message format\n\n\n  const msg = !isMessageFunction(format) ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) : format; // if occurred compile error, return the message format\n\n  if (occurred) {\n    return format;\n  } // evaluate message with context\n\n\n  const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n  const msgContext = createMessageContext(ctxOptions);\n  const messaged = evaluateMessage(context, msg, msgContext); // if use post translation option, proceed it with handler\n\n  const ret = postTranslation ? postTranslation(messaged) : messaged; // NOTE: experimental !!\n\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    // prettier-ignore\n    const payloads = {\n      timestamp: Date.now(),\n      key: isString(key) ? key : isMessageFunction(format) ? format.key : '',\n      locale: targetLocale || (isMessageFunction(format) ? format.locale : ''),\n      format: isString(format) ? format : isMessageFunction(format) ? format.source : '',\n      message: ret\n    };\n    payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n    translateDevTools(payloads);\n  }\n\n  return ret;\n}\n\nfunction escapeParams(options) {\n  if (isArray(options.list)) {\n    options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n  } else if (isObject(options.named)) {\n    Object.keys(options.named).forEach(key => {\n      if (isString(options.named[key])) {\n        options.named[key] = escapeHtml(options.named[key]);\n      }\n    });\n  }\n}\n\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n  const {\n    messages,\n    onWarn,\n    messageResolver: resolveValue,\n    localeFallbacker\n  } = context;\n  const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  let message = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'translate';\n\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n        key,\n        target: targetLocale\n      }));\n    } // for vue-devtools timeline event\n\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n\n      if (emitter) {\n        emitter.emit(\"fallback\"\n        /* FALBACK */\n        , {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n\n    message = messages[targetLocale] || {}; // for vue-devtools timeline event\n\n    let start = null;\n    let startTag;\n    let endTag;\n\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      start = window.performance.now();\n      startTag = 'intlify-message-resolve-start';\n      endTag = 'intlify-message-resolve-end';\n      mark && mark(startTag);\n    }\n\n    if ((format = resolveValue(message, key)) === null) {\n      // if null, resolve with object key path\n      format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n    } // for vue-devtools timeline event\n\n\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      const end = window.performance.now();\n      const emitter = context.__v_emitter;\n\n      if (emitter && start && format) {\n        emitter.emit(\"message-resolve\"\n        /* MESSAGE_RESOLVE */\n        , {\n          type: \"message-resolve\"\n          /* MESSAGE_RESOLVE */\n          ,\n          key,\n          message: format,\n          time: end - start,\n          groupId: `${type}:${key}`\n        });\n      }\n\n      if (startTag && endTag && mark && measure) {\n        mark(endTag);\n        measure('intlify message resolve', startTag, endTag);\n      }\n    }\n\n    if (isString(format) || isFunction(format)) break;\n    const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    key, targetLocale, missingWarn, type);\n\n    if (missingRet !== key) {\n      format = missingRet;\n    }\n\n    from = to;\n  }\n\n  return [format, targetLocale, message];\n}\n\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) {\n  const {\n    messageCompiler,\n    warnHtmlMessage\n  } = context;\n\n  if (isMessageFunction(format)) {\n    const msg = format;\n    msg.locale = msg.locale || targetLocale;\n    msg.key = msg.key || key;\n    return msg;\n  }\n\n  if (messageCompiler == null) {\n    const msg = () => format;\n\n    msg.locale = targetLocale;\n    msg.key = key;\n    return msg;\n  } // for vue-devtools timeline event\n\n\n  let start = null;\n  let startTag;\n  let endTag;\n\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-compilation-start';\n    endTag = 'intlify-message-compilation-end';\n    mark && mark(startTag);\n  }\n\n  const msg = messageCompiler(format, getCompileOptions(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, errorDetector)); // for vue-devtools timeline event\n\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n\n    if (emitter && start) {\n      emitter.emit(\"message-compilation\"\n      /* MESSAGE_COMPILATION */\n      , {\n        type: \"message-compilation\"\n        /* MESSAGE_COMPILATION */\n        ,\n        message: format,\n        time: end - start,\n        groupId: `${'translate'}:${key}`\n      });\n    }\n\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message compilation', startTag, endTag);\n    }\n  }\n\n  msg.locale = targetLocale;\n  msg.key = key;\n  msg.source = format;\n  return msg;\n}\n\nfunction evaluateMessage(context, msg, msgCtx) {\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-evaluation-start';\n    endTag = 'intlify-message-evaluation-end';\n    mark && mark(startTag);\n  }\n\n  const messaged = msg(msgCtx); // for vue-devtools timeline event\n\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n\n    if (emitter && start) {\n      emitter.emit(\"message-evaluation\"\n      /* MESSAGE_EVALUATION */\n      , {\n        type: \"message-evaluation\"\n        /* MESSAGE_EVALUATION */\n        ,\n        value: messaged,\n        time: end - start,\n        groupId: `${'translate'}:${msg.key}`\n      });\n    }\n\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message evaluation', startTag, endTag);\n    }\n  }\n\n  return messaged;\n}\n/** @internal */\n\n\nfunction parseTranslateArgs(...args) {\n  const [arg1, arg2, arg3] = args;\n  const options = {};\n\n  if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  } // prettier-ignore\n\n\n  const key = isNumber(arg1) ? String(arg1) : isMessageFunction(arg1) ? arg1 : arg1;\n\n  if (isNumber(arg2)) {\n    options.plural = arg2;\n  } else if (isString(arg2)) {\n    options.default = arg2;\n  } else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n    options.named = arg2;\n  } else if (isArray(arg2)) {\n    options.list = arg2;\n  }\n\n  if (isNumber(arg3)) {\n    options.plural = arg3;\n  } else if (isString(arg3)) {\n    options.default = arg3;\n  } else if (isPlainObject(arg3)) {\n    assign(options, arg3);\n  }\n\n  return [key, options];\n}\n\nfunction getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {\n  return {\n    warnHtmlMessage,\n    onError: err => {\n      errorDetector && errorDetector(err);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const message = `Message compilation error: ${err.message}`;\n        const codeFrame = err.location && generateCodeFrame(source, err.location.start.offset, err.location.end.offset);\n        const emitter = context.__v_emitter;\n\n        if (emitter) {\n          emitter.emit(\"compile-error\"\n          /* COMPILE_ERROR */\n          , {\n            message: source,\n            error: err.message,\n            start: err.location && err.location.start.offset,\n            end: err.location && err.location.end.offset,\n            groupId: `${'translate'}:${key}`\n          });\n        }\n\n        console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n      } else {\n        throw err;\n      }\n    },\n    onCacheKey: source => generateFormatCacheKey(locale, key, source)\n  };\n}\n\nfunction getMessageContextOptions(context, locale, message, options) {\n  const {\n    modifiers,\n    pluralRules,\n    messageResolver: resolveValue,\n    fallbackLocale,\n    fallbackWarn,\n    missingWarn,\n    fallbackContext\n  } = context;\n\n  const resolveMessage = key => {\n    let val = resolveValue(message, key); // fallback to root context\n\n    if (val == null && fallbackContext) {\n      const [,, message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\n      val = resolveValue(message, key);\n    }\n\n    if (isString(val)) {\n      let occurred = false;\n\n      const errorDetector = () => {\n        occurred = true;\n      };\n\n      const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);\n      return !occurred ? msg : NOOP_MESSAGE_FUNCTION;\n    } else if (isMessageFunction(val)) {\n      return val;\n    } else {\n      // TODO: should be implemented warning message\n      return NOOP_MESSAGE_FUNCTION;\n    }\n  };\n\n  const ctxOptions = {\n    locale,\n    modifiers,\n    pluralRules,\n    messages: resolveMessage\n  };\n\n  if (context.processor) {\n    ctxOptions.processor = context.processor;\n  }\n\n  if (options.list) {\n    ctxOptions.list = options.list;\n  }\n\n  if (options.named) {\n    ctxOptions.named = options.named;\n  }\n\n  if (isNumber(options.plural)) {\n    ctxOptions.pluralIndex = options.plural;\n  }\n\n  return ctxOptions;\n}\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n  dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n  numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n}; // implementation of `datetime` function\n\nfunction datetime(context, ...args) {\n  const {\n    datetimeFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __datetimeFormatters\n  } = context;\n\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.dateTimeFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n    return MISSING_RESOLVE_VALUE;\n  }\n\n  const [key, value, options, overrides] = parseDateTimeArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = isString(options.locale) ? options.locale : context.locale;\n  const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n\n  if (!isString(key) || key === '') {\n    return new Intl.DateTimeFormat(locale).format(value);\n  } // resolve format\n\n\n  let datetimeFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'datetime format';\n\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    } // for vue-devtools timeline event\n\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n\n      if (emitter) {\n        emitter.emit(\"fallback\"\n        /* FALBACK */\n        , {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n\n    datetimeFormat = datetimeFormats[targetLocale] || {};\n    format = datetimeFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n\n    from = to;\n  } // checking format and target locale\n\n\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n\n  let id = `${targetLocale}__${key}`;\n\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n\n  let formatter = __datetimeFormatters.get(id);\n\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n\n    __datetimeFormatters.set(id, formatter);\n  }\n\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\n\n\nfunction parseDateTimeArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  let options = {};\n  let overrides = {};\n  let value;\n\n  if (isString(arg1)) {\n    // Only allow ISO strings - other date formats are often supported,\n    // but may cause different results in different browsers.\n    const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n\n    if (!matches) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    } // Some browsers can not parse the iso datetime separated by space,\n    // this is a compromise solution by replace the 'T'/' ' with 'T'\n\n\n    const dateTime = matches[3] ? matches[3].trim().startsWith('T') ? `${matches[1].trim()}${matches[3].trim()}` : `${matches[1].trim()}T${matches[3].trim()}` : matches[1].trim();\n    value = new Date(dateTime);\n\n    try {\n      // This will fail if the date is not valid\n      value.toISOString();\n    } catch (e) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n  } else if (isDate(arg1)) {\n    if (isNaN(arg1.getTime())) {\n      throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n    }\n\n    value = arg1;\n  } else if (isNumber(arg1)) {\n    value = arg1;\n  } else {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    options = arg2;\n  }\n\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\n\n\nfunction clearDateTimeFormat(ctx, locale, format) {\n  const context = ctx;\n\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n\n    if (!context.__datetimeFormatters.has(id)) {\n      continue;\n    }\n\n    context.__datetimeFormatters.delete(id);\n  }\n} // implementation of `number` function\n\n\nfunction number(context, ...args) {\n  const {\n    numberFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __numberFormatters\n  } = context;\n\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.numberFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n    return MISSING_RESOLVE_VALUE;\n  }\n\n  const [key, value, options, overrides] = parseNumberArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = isString(options.locale) ? options.locale : context.locale;\n  const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n\n  if (!isString(key) || key === '') {\n    return new Intl.NumberFormat(locale).format(value);\n  } // resolve format\n\n\n  let numberFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'number format';\n\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    } // for vue-devtools timeline event\n\n\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n\n      if (emitter) {\n        emitter.emit(\"fallback\"\n        /* FALBACK */\n        , {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n\n    numberFormat = numberFormats[targetLocale] || {};\n    format = numberFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n\n    from = to;\n  } // checking format and target locale\n\n\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n\n  let id = `${targetLocale}__${key}`;\n\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n\n  let formatter = __numberFormatters.get(id);\n\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n\n    __numberFormatters.set(id, formatter);\n  }\n\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\n\n\nfunction parseNumberArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  let options = {};\n  let overrides = {};\n\n  if (!isNumber(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n\n  const value = arg1;\n\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    options = arg2;\n  }\n\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\n\n\nfunction clearNumberFormat(ctx, locale, format) {\n  const context = ctx;\n\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n\n    if (!context.__numberFormatters.has(id)) {\n      continue;\n    }\n\n    context.__numberFormatters.delete(id);\n  }\n} // TODO: we could not exports for Node native ES Moudles yet...\n\n\n{\n  if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n  }\n}\nexport { CoreErrorCodes, CoreWarnCodes, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getWarnMessage, handleMissing, initI18nDevTools, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };","map":{"version":3,"sources":["/Users/andoyusuke/portfolio_ando/node_modules/@intlify/core-base/dist/core-base.esm-bundler.js"],"names":["isObject","isNumber","isString","isFunction","isPlainObject","toDisplayString","format","isArray","isBoolean","assign","isRegExp","warn","escapeHtml","inBrowser","mark","measure","generateCodeFrame","generateFormatCacheKey","isEmptyObject","isDate","getGlobalThis","defaultOnError","baseCompile","CompileErrorCodes","createCompileError","IntlifyDevToolsHooks","pathStateMachine","literalValueRE","isLiteral","exp","test","stripQuotes","str","a","charCodeAt","b","length","slice","getPathCharType","ch","undefined","code","formatSubPath","path","trimmed","trim","charAt","isNaN","parseInt","parse","keys","index","mode","subPathDepth","c","key","newChar","type","transition","action","typeMap","actions","push","maybeUnescapeQuote","nextChar","cache","Map","resolveWithKeyValue","obj","resolveValue","hit","get","set","len","last","i","val","DEFAULT_MODIFIER","DEFAULT_MESSAGE","ctx","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","values","join","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","Math","abs","min","getPluralIndex","options","pluralIndex","named","count","n","normalizeNamed","props","createMessageContext","locale","pluralRule","pluralRules","orgPluralRule","plural","messages","_list","list","_named","message","msg","parent","_modifier","name","modifiers","normalize","processor","interpolate","linked","modifier","devtools","setDevToolsHook","hook","getDevToolsHook","initI18nDevTools","i18n","version","meta","emit","I18nInit","timestamp","Date","now","translateDevTools","createDevToolsHook","FunctionTranslate","payloads","CoreWarnCodes","NOT_FOUND_KEY","FALLBACK_TO_TRANSLATE","CANNOT_FORMAT_NUMBER","FALLBACK_TO_NUMBER_FORMAT","CANNOT_FORMAT_DATE","FALLBACK_TO_DATE_FORMAT","__EXTEND_POINT__","warnMessages","getWarnMessage","args","fallbackWithSimple","fallback","start","Set","Object","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","context","__localeChainCache","chain","block","appendBlockToChain","defaults","blocks","follow","appendLocaleToChain","tokens","split","target","appendItemToChain","splice","includes","replace","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","getDefaultLinkedModifiers","upper","toUpperCase","lower","toLowerCase","capitalize","toLocaleUpperCase","substr","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","fallbackLocale","datetimeFormats","numberFormats","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","warnHtmlMessage","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","onWarn","internalOptions","__datetimeFormatters","__numberFormatters","__meta","cid","process","env","NODE_ENV","__v_emitter","__INTLIFY_PROD_DEVTOOLS__","isTranslateFallbackWarn","RegExp","isTranslateMissingWarn","handleMissing","emitter","groupId","ret","updateFallbackLocale","RE_HTML_TAG","WARN_MESSAGE","checkHtmlMessage","source","defaultOnCacheKey","compileCache","create","clearCompileCache","compileToFunction","onCacheKey","cached","occurred","onError","err","Function","inc","CoreErrorCodes","INVALID_ARGUMENT","INVALID_DATE_ARGUMENT","INVALID_ISO_DATE_ARGUMENT","createCoreError","errorMessages","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","escapeParams","formatScope","targetLocale","resolveMessageFormat","cacheBaseKey","errorDetector","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","map","item","forEach","locales","from","to","startTag","endTag","window","performance","end","time","missingRet","getCompileOptions","msgCtx","value","arg1","arg2","arg3","String","codeFrame","location","offset","error","console","resolveMessage","intlDefined","Intl","Availabilities","dateTimeFormat","DateTimeFormat","numberFormat","NumberFormat","datetime","overrides","parseDateTimeArgs","part","datetimeFormat","id","JSON","stringify","formatter","formatToParts","arg4","matches","match","dateTime","startsWith","toISOString","e","getTime","clearDateTimeFormat","has","delete","number","parseNumberArgs","clearNumberFormat"],"mappings":"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","sourcesContent":["/*!\n  * core-base v9.2.0-beta.35\n  * (c) 2022 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { isObject, isNumber, isString, isFunction, isPlainObject, toDisplayString, format, isArray, isBoolean, assign, isRegExp, warn, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey, isEmptyObject, isDate, getGlobalThis } from '@intlify/shared';\nimport { defaultOnError, baseCompile, CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\nimport { IntlifyDevToolsHooks } from '@intlify/devtools-if';\n\nconst pathStateMachine =  [];\r\npathStateMachine[0 /* BEFORE_PATH */] = {\r\n    [\"w\" /* WORKSPACE */]: [0 /* BEFORE_PATH */],\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\r\n};\r\npathStateMachine[1 /* IN_PATH */] = {\r\n    [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */],\r\n    [\".\" /* DOT */]: [2 /* BEFORE_IDENT */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */]\r\n};\r\npathStateMachine[2 /* BEFORE_IDENT */] = {\r\n    [\"w\" /* WORKSPACE */]: [2 /* BEFORE_IDENT */],\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */]\r\n};\r\npathStateMachine[3 /* IN_IDENT */] = {\r\n    [\"i\" /* IDENT */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"0\" /* ZERO */]: [3 /* IN_IDENT */, 0 /* APPEND */],\r\n    [\"w\" /* WORKSPACE */]: [1 /* IN_PATH */, 1 /* PUSH */],\r\n    [\".\" /* DOT */]: [2 /* BEFORE_IDENT */, 1 /* PUSH */],\r\n    [\"[\" /* LEFT_BRACKET */]: [4 /* IN_SUB_PATH */, 1 /* PUSH */],\r\n    [\"o\" /* END_OF_FAIL */]: [7 /* AFTER_PATH */, 1 /* PUSH */]\r\n};\r\npathStateMachine[4 /* IN_SUB_PATH */] = {\r\n    [\"'\" /* SINGLE_QUOTE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */],\r\n    [\"\\\"\" /* DOUBLE_QUOTE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */],\r\n    [\"[\" /* LEFT_BRACKET */]: [\r\n        4 /* IN_SUB_PATH */,\r\n        2 /* INC_SUB_PATH_DEPTH */\r\n    ],\r\n    [\"]\" /* RIGHT_BRACKET */]: [1 /* IN_PATH */, 3 /* PUSH_SUB_PATH */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */]\r\n};\r\npathStateMachine[5 /* IN_SINGLE_QUOTE */] = {\r\n    [\"'\" /* SINGLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [5 /* IN_SINGLE_QUOTE */, 0 /* APPEND */]\r\n};\r\npathStateMachine[6 /* IN_DOUBLE_QUOTE */] = {\r\n    [\"\\\"\" /* DOUBLE_QUOTE */]: [4 /* IN_SUB_PATH */, 0 /* APPEND */],\r\n    [\"o\" /* END_OF_FAIL */]: 8 /* ERROR */,\r\n    [\"l\" /* ELSE */]: [6 /* IN_DOUBLE_QUOTE */, 0 /* APPEND */]\r\n};\r\n/**\r\n * Check if an expression is a literal value.\r\n */\r\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\r\nfunction isLiteral(exp) {\r\n    return literalValueRE.test(exp);\r\n}\r\n/**\r\n * Strip quotes from a string\r\n */\r\nfunction stripQuotes(str) {\r\n    const a = str.charCodeAt(0);\r\n    const b = str.charCodeAt(str.length - 1);\r\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\r\n}\r\n/**\r\n * Determine the type of a character in a keypath.\r\n */\r\nfunction getPathCharType(ch) {\r\n    if (ch === undefined || ch === null) {\r\n        return \"o\" /* END_OF_FAIL */;\r\n    }\r\n    const code = ch.charCodeAt(0);\r\n    switch (code) {\r\n        case 0x5b: // [\r\n        case 0x5d: // ]\r\n        case 0x2e: // .\r\n        case 0x22: // \"\r\n        case 0x27: // '\r\n            return ch;\r\n        case 0x5f: // _\r\n        case 0x24: // $\r\n        case 0x2d: // -\r\n            return \"i\" /* IDENT */;\r\n        case 0x09: // Tab (HT)\r\n        case 0x0a: // Newline (LF)\r\n        case 0x0d: // Return (CR)\r\n        case 0xa0: // No-break space (NBSP)\r\n        case 0xfeff: // Byte Order Mark (BOM)\r\n        case 0x2028: // Line Separator (LS)\r\n        case 0x2029: // Paragraph Separator (PS)\r\n            return \"w\" /* WORKSPACE */;\r\n    }\r\n    return \"i\" /* IDENT */;\r\n}\r\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\r\nfunction formatSubPath(path) {\r\n    const trimmed = path.trim();\r\n    // invalid leading 0\r\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\r\n        return false;\r\n    }\r\n    return isLiteral(trimmed)\r\n        ? stripQuotes(trimmed)\r\n        : \"*\" /* ASTARISK */ + trimmed;\r\n}\r\n/**\r\n * Parse a string path into an array of segments\r\n */\r\nfunction parse(path) {\r\n    const keys = [];\r\n    let index = -1;\r\n    let mode = 0 /* BEFORE_PATH */;\r\n    let subPathDepth = 0;\r\n    let c;\r\n    let key; // eslint-disable-line\r\n    let newChar;\r\n    let type;\r\n    let transition;\r\n    let action;\r\n    let typeMap;\r\n    const actions = [];\r\n    actions[0 /* APPEND */] = () => {\r\n        if (key === undefined) {\r\n            key = newChar;\r\n        }\r\n        else {\r\n            key += newChar;\r\n        }\r\n    };\r\n    actions[1 /* PUSH */] = () => {\r\n        if (key !== undefined) {\r\n            keys.push(key);\r\n            key = undefined;\r\n        }\r\n    };\r\n    actions[2 /* INC_SUB_PATH_DEPTH */] = () => {\r\n        actions[0 /* APPEND */]();\r\n        subPathDepth++;\r\n    };\r\n    actions[3 /* PUSH_SUB_PATH */] = () => {\r\n        if (subPathDepth > 0) {\r\n            subPathDepth--;\r\n            mode = 4 /* IN_SUB_PATH */;\r\n            actions[0 /* APPEND */]();\r\n        }\r\n        else {\r\n            subPathDepth = 0;\r\n            if (key === undefined) {\r\n                return false;\r\n            }\r\n            key = formatSubPath(key);\r\n            if (key === false) {\r\n                return false;\r\n            }\r\n            else {\r\n                actions[1 /* PUSH */]();\r\n            }\r\n        }\r\n    };\r\n    function maybeUnescapeQuote() {\r\n        const nextChar = path[index + 1];\r\n        if ((mode === 5 /* IN_SINGLE_QUOTE */ &&\r\n            nextChar === \"'\" /* SINGLE_QUOTE */) ||\r\n            (mode === 6 /* IN_DOUBLE_QUOTE */ &&\r\n                nextChar === \"\\\"\" /* DOUBLE_QUOTE */)) {\r\n            index++;\r\n            newChar = '\\\\' + nextChar;\r\n            actions[0 /* APPEND */]();\r\n            return true;\r\n        }\r\n    }\r\n    while (mode !== null) {\r\n        index++;\r\n        c = path[index];\r\n        if (c === '\\\\' && maybeUnescapeQuote()) {\r\n            continue;\r\n        }\r\n        type = getPathCharType(c);\r\n        typeMap = pathStateMachine[mode];\r\n        transition = typeMap[type] || typeMap[\"l\" /* ELSE */] || 8 /* ERROR */;\r\n        // check parse error\r\n        if (transition === 8 /* ERROR */) {\r\n            return;\r\n        }\r\n        mode = transition[0];\r\n        if (transition[1] !== undefined) {\r\n            action = actions[transition[1]];\r\n            if (action) {\r\n                newChar = c;\r\n                if (action() === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        // check parse finish\r\n        if (mode === 7 /* AFTER_PATH */) {\r\n            return keys;\r\n        }\r\n    }\r\n}\r\n// path token cache\r\nconst cache = new Map();\r\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveWithKeyValue(obj, path) {\r\n    return isObject(obj) ? obj[path] : null;\r\n}\r\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveValue(obj, path) {\r\n    // check object\r\n    if (!isObject(obj)) {\r\n        return null;\r\n    }\r\n    // parse path\r\n    let hit = cache.get(path);\r\n    if (!hit) {\r\n        hit = parse(path);\r\n        if (hit) {\r\n            cache.set(path, hit);\r\n        }\r\n    }\r\n    // check hit\r\n    if (!hit) {\r\n        return null;\r\n    }\r\n    // resolve path value\r\n    const len = hit.length;\r\n    let last = obj;\r\n    let i = 0;\r\n    while (i < len) {\r\n        const val = last[hit[i]];\r\n        if (val === undefined) {\r\n            return null;\r\n        }\r\n        last = val;\r\n        i++;\r\n    }\r\n    return last;\r\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\r\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\r\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\r\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : values.join('');\r\nconst DEFAULT_INTERPOLATE = toDisplayString;\r\nfunction pluralDefault(choice, choicesLength) {\r\n    choice = Math.abs(choice);\r\n    if (choicesLength === 2) {\r\n        // prettier-ignore\r\n        return choice\r\n            ? choice > 1\r\n                ? 1\r\n                : 0\r\n            : 1;\r\n    }\r\n    return choice ? Math.min(choice, 2) : 0;\r\n}\r\nfunction getPluralIndex(options) {\r\n    // prettier-ignore\r\n    const index = isNumber(options.pluralIndex)\r\n        ? options.pluralIndex\r\n        : -1;\r\n    // prettier-ignore\r\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\r\n        ? isNumber(options.named.count)\r\n            ? options.named.count\r\n            : isNumber(options.named.n)\r\n                ? options.named.n\r\n                : index\r\n        : index;\r\n}\r\nfunction normalizeNamed(pluralIndex, props) {\r\n    if (!props.count) {\r\n        props.count = pluralIndex;\r\n    }\r\n    if (!props.n) {\r\n        props.n = pluralIndex;\r\n    }\r\n}\r\nfunction createMessageContext(options = {}) {\r\n    const locale = options.locale;\r\n    const pluralIndex = getPluralIndex(options);\r\n    const pluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? options.pluralRules[locale]\r\n        : pluralDefault;\r\n    const orgPluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? pluralDefault\r\n        : undefined;\r\n    const plural = (messages) => messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\r\n    const _list = options.list || [];\r\n    const list = (index) => _list[index];\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const _named = options.named || {};\r\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\r\n    const named = (key) => _named[key];\r\n    function message(key) {\r\n        // prettier-ignore\r\n        const msg = isFunction(options.messages)\r\n            ? options.messages(key)\r\n            : isObject(options.messages)\r\n                ? options.messages[key]\r\n                : false;\r\n        return !msg\r\n            ? options.parent\r\n                ? options.parent.message(key) // resolve from parent messages\r\n                : DEFAULT_MESSAGE\r\n            : msg;\r\n    }\r\n    const _modifier = (name) => options.modifiers\r\n        ? options.modifiers[name]\r\n        : DEFAULT_MODIFIER;\r\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\r\n        ? options.processor.normalize\r\n        : DEFAULT_NORMALIZE;\r\n    const interpolate = isPlainObject(options.processor) &&\r\n        isFunction(options.processor.interpolate)\r\n        ? options.processor.interpolate\r\n        : DEFAULT_INTERPOLATE;\r\n    const linked = (key, modifier) => {\r\n        const msg = message(key)(ctx);\r\n        return isString(modifier) ? _modifier(modifier)(msg) : msg;\r\n    };\r\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\r\n        ? options.processor.type\r\n        : DEFAULT_MESSAGE_DATA_TYPE;\r\n    const ctx = {\r\n        [\"list\" /* LIST */]: list,\r\n        [\"named\" /* NAMED */]: named,\r\n        [\"plural\" /* PLURAL */]: plural,\r\n        [\"linked\" /* LINKED */]: linked,\r\n        [\"message\" /* MESSAGE */]: message,\r\n        [\"type\" /* TYPE */]: type,\r\n        [\"interpolate\" /* INTERPOLATE */]: interpolate,\r\n        [\"normalize\" /* NORMALIZE */]: normalize\r\n    };\r\n    return ctx;\r\n}\n\nlet devtools = null;\r\nfunction setDevToolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction getDevToolsHook() {\r\n    return devtools;\r\n}\r\nfunction initI18nDevTools(i18n, version, meta) {\r\n    // TODO: queue if devtools is undefined\r\n    devtools &&\r\n        devtools.emit(IntlifyDevToolsHooks.I18nInit, {\r\n            timestamp: Date.now(),\r\n            i18n,\r\n            version,\r\n            meta\r\n        });\r\n}\r\nconst translateDevTools = /* #__PURE__*/ createDevToolsHook(IntlifyDevToolsHooks.FunctionTranslate);\r\nfunction createDevToolsHook(hook) {\r\n    return (payloads) => devtools && devtools.emit(hook, payloads);\r\n}\n\nconst CoreWarnCodes = {\r\n    NOT_FOUND_KEY: 1,\r\n    FALLBACK_TO_TRANSLATE: 2,\r\n    CANNOT_FORMAT_NUMBER: 3,\r\n    FALLBACK_TO_NUMBER_FORMAT: 4,\r\n    CANNOT_FORMAT_DATE: 5,\r\n    FALLBACK_TO_DATE_FORMAT: 6,\r\n    __EXTEND_POINT__: 7\r\n};\r\n/** @internal */\r\nconst warnMessages = {\r\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\r\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`\r\n};\r\nfunction getWarnMessage(code, ...args) {\r\n    return format(warnMessages[code], ...args);\r\n}\n\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\r\n) {\r\n    // prettier-ignore\r\n    return [...new Set([\r\n            start,\r\n            ...(isArray(fallback)\r\n                ? fallback\r\n                : isObject(fallback)\r\n                    ? Object.keys(fallback)\r\n                    : isString(fallback)\r\n                        ? [fallback]\r\n                        : [start])\r\n        ])];\r\n}\r\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\r\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\r\n    const context = ctx;\r\n    if (!context.__localeChainCache) {\r\n        context.__localeChainCache = new Map();\r\n    }\r\n    let chain = context.__localeChainCache.get(startLocale);\r\n    if (!chain) {\r\n        chain = [];\r\n        // first block defined by start\r\n        let block = [start];\r\n        // while any intervening block found\r\n        while (isArray(block)) {\r\n            block = appendBlockToChain(chain, block, fallback);\r\n        }\r\n        // prettier-ignore\r\n        // last block defined by default\r\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\r\n            ? fallback\r\n            : fallback['default']\r\n                ? fallback['default']\r\n                : null;\r\n        // convert defaults to array\r\n        block = isString(defaults) ? [defaults] : defaults;\r\n        if (isArray(block)) {\r\n            appendBlockToChain(chain, block, false);\r\n        }\r\n        context.__localeChainCache.set(startLocale, chain);\r\n    }\r\n    return chain;\r\n}\r\nfunction appendBlockToChain(chain, block, blocks) {\r\n    let follow = true;\r\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\r\n        const locale = block[i];\r\n        if (isString(locale)) {\r\n            follow = appendLocaleToChain(chain, block[i], blocks);\r\n        }\r\n    }\r\n    return follow;\r\n}\r\nfunction appendLocaleToChain(chain, locale, blocks) {\r\n    let follow;\r\n    const tokens = locale.split('-');\r\n    do {\r\n        const target = tokens.join('-');\r\n        follow = appendItemToChain(chain, target, blocks);\r\n        tokens.splice(-1, 1);\r\n    } while (tokens.length && follow === true);\r\n    return follow;\r\n}\r\nfunction appendItemToChain(chain, target, blocks) {\r\n    let follow = false;\r\n    if (!chain.includes(target)) {\r\n        follow = true;\r\n        if (target) {\r\n            follow = target[target.length - 1] !== '!';\r\n            const locale = target.replace(/!/g, '');\r\n            chain.push(locale);\r\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\r\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\r\n            ) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                follow = blocks[locale];\r\n            }\r\n        }\r\n    }\r\n    return follow;\r\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\r\nconst VERSION = '9.2.0-beta.35';\r\nconst NOT_REOSLVED = -1;\r\nconst DEFAULT_LOCALE = 'en-US';\r\nconst MISSING_RESOLVE_VALUE = '';\r\nfunction getDefaultLinkedModifiers() {\r\n    return {\r\n        upper: (val) => (isString(val) ? val.toUpperCase() : val),\r\n        lower: (val) => (isString(val) ? val.toLowerCase() : val),\r\n        // prettier-ignore\r\n        capitalize: (val) => (isString(val)\r\n            ? `${val.charAt(0).toLocaleUpperCase()}${val.substr(1)}`\r\n            : val)\r\n    };\r\n}\r\nlet _compiler;\r\nfunction registerMessageCompiler(compiler) {\r\n    _compiler = compiler;\r\n}\r\nlet _resolver;\r\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerMessageResolver(resolver) {\r\n    _resolver = resolver;\r\n}\r\nlet _fallbacker;\r\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerLocaleFallbacker(fallbacker) {\r\n    _fallbacker = fallbacker;\r\n}\r\n// Additional Meta for Intlify DevTools\r\nlet _additionalMeta = null;\r\nconst setAdditionalMeta =  (meta) => {\r\n    _additionalMeta = meta;\r\n};\r\nconst getAdditionalMeta =  () => _additionalMeta;\r\nlet _fallbackContext = null;\r\nconst setFallbackContext = (context) => {\r\n    _fallbackContext = context;\r\n};\r\nconst getFallbackContext = () => _fallbackContext;\r\n// ID for CoreContext\r\nlet _cid = 0;\r\nfunction createCoreContext(options = {}) {\r\n    // setup options\r\n    const version = isString(options.version) ? options.version : VERSION;\r\n    const locale = isString(options.locale) ? options.locale : DEFAULT_LOCALE;\r\n    const fallbackLocale = isArray(options.fallbackLocale) ||\r\n        isPlainObject(options.fallbackLocale) ||\r\n        isString(options.fallbackLocale) ||\r\n        options.fallbackLocale === false\r\n        ? options.fallbackLocale\r\n        : locale;\r\n    const messages = isPlainObject(options.messages)\r\n        ? options.messages\r\n        : { [locale]: {} };\r\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\r\n            ? options.datetimeFormats\r\n            : { [locale]: {} }\r\n        ;\r\n    const numberFormats = isPlainObject(options.numberFormats)\r\n            ? options.numberFormats\r\n            : { [locale]: {} }\r\n        ;\r\n    const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\r\n    const pluralRules = options.pluralRules || {};\r\n    const missing = isFunction(options.missing) ? options.missing : null;\r\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\r\n        ? options.missingWarn\r\n        : true;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : true;\r\n    const fallbackFormat = !!options.fallbackFormat;\r\n    const unresolving = !!options.unresolving;\r\n    const postTranslation = isFunction(options.postTranslation)\r\n        ? options.postTranslation\r\n        : null;\r\n    const processor = isPlainObject(options.processor) ? options.processor : null;\r\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    const escapeParameter = !!options.escapeParameter;\r\n    const messageCompiler = isFunction(options.messageCompiler)\r\n        ? options.messageCompiler\r\n        : _compiler;\r\n    const messageResolver = isFunction(options.messageResolver)\r\n        ? options.messageResolver\r\n        : _resolver || resolveWithKeyValue;\r\n    const localeFallbacker = isFunction(options.localeFallbacker)\r\n        ? options.localeFallbacker\r\n        : _fallbacker || fallbackWithSimple;\r\n    const fallbackContext = isObject(options.fallbackContext)\r\n        ? options.fallbackContext\r\n        : undefined;\r\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\r\n    // setup internal options\r\n    const internalOptions = options;\r\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\r\n            ? internalOptions.__datetimeFormatters\r\n            : new Map()\r\n        ;\r\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\r\n            ? internalOptions.__numberFormatters\r\n            : new Map()\r\n        ;\r\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\r\n    _cid++;\r\n    const context = {\r\n        version,\r\n        cid: _cid,\r\n        locale,\r\n        fallbackLocale,\r\n        messages,\r\n        modifiers,\r\n        pluralRules,\r\n        missing,\r\n        missingWarn,\r\n        fallbackWarn,\r\n        fallbackFormat,\r\n        unresolving,\r\n        postTranslation,\r\n        processor,\r\n        warnHtmlMessage,\r\n        escapeParameter,\r\n        messageCompiler,\r\n        messageResolver,\r\n        localeFallbacker,\r\n        fallbackContext,\r\n        onWarn,\r\n        __meta\r\n    };\r\n    {\r\n        context.datetimeFormats = datetimeFormats;\r\n        context.numberFormats = numberFormats;\r\n        context.__datetimeFormatters = __datetimeFormatters;\r\n        context.__numberFormatters = __numberFormatters;\r\n    }\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        context.__v_emitter =\r\n            internalOptions.__v_emitter != null\r\n                ? internalOptions.__v_emitter\r\n                : undefined;\r\n    }\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        initI18nDevTools(context, version, __meta);\r\n    }\r\n    return context;\r\n}\r\n/** @internal */\r\nfunction isTranslateFallbackWarn(fallback, key) {\r\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\r\n}\r\n/** @internal */\r\nfunction isTranslateMissingWarn(missing, key) {\r\n    return missing instanceof RegExp ? missing.test(key) : missing;\r\n}\r\n/** @internal */\r\nfunction handleMissing(context, key, locale, missingWarn, type) {\r\n    const { missing, onWarn } = context;\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const emitter = context.__v_emitter;\r\n        if (emitter) {\r\n            emitter.emit(\"missing\" /* MISSING */, {\r\n                locale,\r\n                key,\r\n                type,\r\n                groupId: `${type}:${key}`\r\n            });\r\n        }\r\n    }\r\n    if (missing !== null) {\r\n        const ret = missing(context, locale, key, type);\r\n        return isString(ret) ? ret : key;\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\r\n        }\r\n        return key;\r\n    }\r\n}\r\n/** @internal */\r\nfunction updateFallbackLocale(ctx, locale, fallback) {\r\n    const context = ctx;\r\n    context.__localeChainCache = new Map();\r\n    ctx.localeFallbacker(ctx, fallback, locale);\r\n}\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\r\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\r\nfunction checkHtmlMessage(source, options) {\r\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    if (warnHtmlMessage && RE_HTML_TAG.test(source)) {\r\n        warn(format(WARN_MESSAGE, { source }));\r\n    }\r\n}\r\nconst defaultOnCacheKey = (source) => source;\r\nlet compileCache = Object.create(null);\r\nfunction clearCompileCache() {\r\n    compileCache = Object.create(null);\r\n}\r\nfunction compileToFunction(source, options = {}) {\r\n    {\r\n        // check HTML message\r\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(source, options);\r\n        // check caches\r\n        const onCacheKey = options.onCacheKey || defaultOnCacheKey;\r\n        const key = onCacheKey(source);\r\n        const cached = compileCache[key];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        // compile error detecting\r\n        let occurred = false;\r\n        const onError = options.onError || defaultOnError;\r\n        options.onError = (err) => {\r\n            occurred = true;\r\n            onError(err);\r\n        };\r\n        // compile\r\n        const { code } = baseCompile(source, options);\r\n        // evaluate function\r\n        const msg = new Function(`return ${code}`)();\r\n        // if occurred compile error, don't cache\r\n        return !occurred ? (compileCache[key] = msg) : msg;\r\n    }\r\n}\n\nlet code = CompileErrorCodes.__EXTEND_POINT__;\r\nconst inc = () => ++code;\r\nconst CoreErrorCodes = {\r\n    INVALID_ARGUMENT: code,\r\n    INVALID_DATE_ARGUMENT: inc(),\r\n    INVALID_ISO_DATE_ARGUMENT: inc(),\r\n    __EXTEND_POINT__: inc() // 18\r\n};\r\nfunction createCoreError(code) {\r\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\r\n}\r\n/** @internal */\r\nconst errorMessages = {\r\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\r\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\r\n        'Make sure your Date represents a valid date.',\r\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string'\r\n};\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\r\nconst isMessageFunction = (val) => isFunction(val);\r\n// implementation of `translate` function\r\nfunction translate(context, ...args) {\r\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\r\n    const [key, options] = parseTranslateArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const escapeParameter = isBoolean(options.escapeParameter)\r\n        ? options.escapeParameter\r\n        : context.escapeParameter;\r\n    const resolvedMessage = !!options.resolvedMessage;\r\n    // prettier-ignore\r\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\r\n        ? !isBoolean(options.default)\r\n            ? options.default\r\n            : (!messageCompiler ? () => key : key)\r\n        : fallbackFormat // default by `fallbackFormat` option\r\n            ? (!messageCompiler ? () => key : key)\r\n            : '';\r\n    const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    // escape params\r\n    escapeParameter && escapeParams(options);\r\n    // resolve message format\r\n    // eslint-disable-next-line prefer-const\r\n    let [formatScope, targetLocale, message] = !resolvedMessage\r\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\r\n        : [\r\n            key,\r\n            locale,\r\n            messages[locale] || {}\r\n        ];\r\n    // NOTE:\r\n    //  Fix to work around `ssrTransfrom` bug in Vite.\r\n    //  https://github.com/vitejs/vite/issues/4306\r\n    //  To get around this, use temporary variables.\r\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\r\n    let format = formatScope;\r\n    // if you use default message, set it as message format!\r\n    let cacheBaseKey = key;\r\n    if (!resolvedMessage &&\r\n        !(isString(format) || isMessageFunction(format))) {\r\n        if (enableDefaultMsg) {\r\n            format = defaultMsgOrKey;\r\n            cacheBaseKey = format;\r\n        }\r\n    }\r\n    // checking message format and target locale\r\n    if (!resolvedMessage &&\r\n        (!(isString(format) || isMessageFunction(format)) ||\r\n            !isString(targetLocale))) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\r\n        warn(`The message format compilation is not supported in this build. ` +\r\n            `Because message compiler isn't included. ` +\r\n            `You need to pre-compilation all message format. ` +\r\n            `So translate function return '${key}'.`);\r\n        return key;\r\n    }\r\n    // setup compile error detecting\r\n    let occurred = false;\r\n    const errorDetector = () => {\r\n        occurred = true;\r\n    };\r\n    // compile message format\r\n    const msg = !isMessageFunction(format)\r\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector)\r\n        : format;\r\n    // if occurred compile error, return the message format\r\n    if (occurred) {\r\n        return format;\r\n    }\r\n    // evaluate message with context\r\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\r\n    const msgContext = createMessageContext(ctxOptions);\r\n    const messaged = evaluateMessage(context, msg, msgContext);\r\n    // if use post translation option, proceed it with handler\r\n    const ret = postTranslation ? postTranslation(messaged) : messaged;\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        // prettier-ignore\r\n        const payloads = {\r\n            timestamp: Date.now(),\r\n            key: isString(key)\r\n                ? key\r\n                : isMessageFunction(format)\r\n                    ? format.key\r\n                    : '',\r\n            locale: targetLocale || (isMessageFunction(format)\r\n                ? format.locale\r\n                : ''),\r\n            format: isString(format)\r\n                ? format\r\n                : isMessageFunction(format)\r\n                    ? format.source\r\n                    : '',\r\n            message: ret\r\n        };\r\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\r\n        translateDevTools(payloads);\r\n    }\r\n    return ret;\r\n}\r\nfunction escapeParams(options) {\r\n    if (isArray(options.list)) {\r\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\r\n    }\r\n    else if (isObject(options.named)) {\r\n        Object.keys(options.named).forEach(key => {\r\n            if (isString(options.named[key])) {\r\n                options.named[key] = escapeHtml(options.named[key]);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\r\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\r\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    let message = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'translate';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        message =\r\n            messages[targetLocale] || {};\r\n        // for vue-devtools timeline event\r\n        let start = null;\r\n        let startTag;\r\n        let endTag;\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            start = window.performance.now();\r\n            startTag = 'intlify-message-resolve-start';\r\n            endTag = 'intlify-message-resolve-end';\r\n            mark && mark(startTag);\r\n        }\r\n        if ((format = resolveValue(message, key)) === null) {\r\n            // if null, resolve with object key path\r\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            const end = window.performance.now();\r\n            const emitter = context.__v_emitter;\r\n            if (emitter && start && format) {\r\n                emitter.emit(\"message-resolve\" /* MESSAGE_RESOLVE */, {\r\n                    type: \"message-resolve\" /* MESSAGE_RESOLVE */,\r\n                    key,\r\n                    message: format,\r\n                    time: end - start,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n            if (startTag && endTag && mark && measure) {\r\n                mark(endTag);\r\n                measure('intlify message resolve', startTag, endTag);\r\n            }\r\n        }\r\n        if (isString(format) || isFunction(format))\r\n            break;\r\n        const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        key, targetLocale, missingWarn, type);\r\n        if (missingRet !== key) {\r\n            format = missingRet;\r\n        }\r\n        from = to;\r\n    }\r\n    return [format, targetLocale, message];\r\n}\r\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, errorDetector) {\r\n    const { messageCompiler, warnHtmlMessage } = context;\r\n    if (isMessageFunction(format)) {\r\n        const msg = format;\r\n        msg.locale = msg.locale || targetLocale;\r\n        msg.key = msg.key || key;\r\n        return msg;\r\n    }\r\n    if (messageCompiler == null) {\r\n        const msg = (() => format);\r\n        msg.locale = targetLocale;\r\n        msg.key = key;\r\n        return msg;\r\n    }\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-compilation-start';\r\n        endTag = 'intlify-message-compilation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const msg = messageCompiler(format, getCompileOptions(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, errorDetector));\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit(\"message-compilation\" /* MESSAGE_COMPILATION */, {\r\n                type: \"message-compilation\" /* MESSAGE_COMPILATION */,\r\n                message: format,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message compilation', startTag, endTag);\r\n        }\r\n    }\r\n    msg.locale = targetLocale;\r\n    msg.key = key;\r\n    msg.source = format;\r\n    return msg;\r\n}\r\nfunction evaluateMessage(context, msg, msgCtx) {\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-evaluation-start';\r\n        endTag = 'intlify-message-evaluation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const messaged = msg(msgCtx);\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit(\"message-evaluation\" /* MESSAGE_EVALUATION */, {\r\n                type: \"message-evaluation\" /* MESSAGE_EVALUATION */,\r\n                value: messaged,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${msg.key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message evaluation', startTag, endTag);\r\n        }\r\n    }\r\n    return messaged;\r\n}\r\n/** @internal */\r\nfunction parseTranslateArgs(...args) {\r\n    const [arg1, arg2, arg3] = args;\r\n    const options = {};\r\n    if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    // prettier-ignore\r\n    const key = isNumber(arg1)\r\n        ? String(arg1)\r\n        : isMessageFunction(arg1)\r\n            ? arg1\r\n            : arg1;\r\n    if (isNumber(arg2)) {\r\n        options.plural = arg2;\r\n    }\r\n    else if (isString(arg2)) {\r\n        options.default = arg2;\r\n    }\r\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\r\n        options.named = arg2;\r\n    }\r\n    else if (isArray(arg2)) {\r\n        options.list = arg2;\r\n    }\r\n    if (isNumber(arg3)) {\r\n        options.plural = arg3;\r\n    }\r\n    else if (isString(arg3)) {\r\n        options.default = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        assign(options, arg3);\r\n    }\r\n    return [key, options];\r\n}\r\nfunction getCompileOptions(context, locale, key, source, warnHtmlMessage, errorDetector) {\r\n    return {\r\n        warnHtmlMessage,\r\n        onError: (err) => {\r\n            errorDetector && errorDetector(err);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const message = `Message compilation error: ${err.message}`;\r\n                const codeFrame = err.location &&\r\n                    generateCodeFrame(source, err.location.start.offset, err.location.end.offset);\r\n                const emitter = context.__v_emitter;\r\n                if (emitter) {\r\n                    emitter.emit(\"compile-error\" /* COMPILE_ERROR */, {\r\n                        message: source,\r\n                        error: err.message,\r\n                        start: err.location && err.location.start.offset,\r\n                        end: err.location && err.location.end.offset,\r\n                        groupId: `${'translate'}:${key}`\r\n                    });\r\n                }\r\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        },\r\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\r\n    };\r\n}\r\nfunction getMessageContextOptions(context, locale, message, options) {\r\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\r\n    const resolveMessage = (key) => {\r\n        let val = resolveValue(message, key);\r\n        // fallback to root context\r\n        if (val == null && fallbackContext) {\r\n            const [, , message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\r\n            val = resolveValue(message, key);\r\n        }\r\n        if (isString(val)) {\r\n            let occurred = false;\r\n            const errorDetector = () => {\r\n                occurred = true;\r\n            };\r\n            const msg = compileMessageFormat(context, key, locale, val, key, errorDetector);\r\n            return !occurred\r\n                ? msg\r\n                : NOOP_MESSAGE_FUNCTION;\r\n        }\r\n        else if (isMessageFunction(val)) {\r\n            return val;\r\n        }\r\n        else {\r\n            // TODO: should be implemented warning message\r\n            return NOOP_MESSAGE_FUNCTION;\r\n        }\r\n    };\r\n    const ctxOptions = {\r\n        locale,\r\n        modifiers,\r\n        pluralRules,\r\n        messages: resolveMessage\r\n    };\r\n    if (context.processor) {\r\n        ctxOptions.processor = context.processor;\r\n    }\r\n    if (options.list) {\r\n        ctxOptions.list = options.list;\r\n    }\r\n    if (options.named) {\r\n        ctxOptions.named = options.named;\r\n    }\r\n    if (isNumber(options.plural)) {\r\n        ctxOptions.pluralIndex = options.plural;\r\n    }\r\n    return ctxOptions;\r\n}\n\nconst intlDefined = typeof Intl !== 'undefined';\r\nconst Availabilities = {\r\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\r\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\r\n};\n\n// implementation of `datetime` function\r\nfunction datetime(context, ...args) {\r\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __datetimeFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\r\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.DateTimeFormat(locale).format(value);\r\n    }\r\n    // resolve format\r\n    let datetimeFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'datetime format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        datetimeFormat =\r\n            datetimeFormats[targetLocale] || {};\r\n        format = datetimeFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __datetimeFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\r\n        __datetimeFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nfunction parseDateTimeArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    let options = {};\r\n    let overrides = {};\r\n    let value;\r\n    if (isString(arg1)) {\r\n        // Only allow ISO strings - other date formats are often supported,\r\n        // but may cause different results in different browsers.\r\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\r\n        if (!matches) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n        // Some browsers can not parse the iso datetime separated by space,\r\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\r\n        const dateTime = matches[3]\r\n            ? matches[3].trim().startsWith('T')\r\n                ? `${matches[1].trim()}${matches[3].trim()}`\r\n                : `${matches[1].trim()}T${matches[3].trim()}`\r\n            : matches[1].trim();\r\n        value = new Date(dateTime);\r\n        try {\r\n            // This will fail if the date is not valid\r\n            value.toISOString();\r\n        }\r\n        catch (e) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n    }\r\n    else if (isDate(arg1)) {\r\n        if (isNaN(arg1.getTime())) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\r\n        }\r\n        value = arg1;\r\n    }\r\n    else if (isNumber(arg1)) {\r\n        value = arg1;\r\n    }\r\n    else {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        options = arg2;\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearDateTimeFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__datetimeFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__datetimeFormatters.delete(id);\r\n    }\r\n}\n\n// implementation of `number` function\r\nfunction number(context, ...args) {\r\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __numberFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\r\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseNumberArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = isString(options.locale) ? options.locale : context.locale;\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.NumberFormat(locale).format(value);\r\n    }\r\n    // resolve format\r\n    let numberFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'number format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        numberFormat =\r\n            numberFormats[targetLocale] || {};\r\n        format = numberFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __numberFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\r\n        __numberFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nfunction parseNumberArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    let options = {};\r\n    let overrides = {};\r\n    if (!isNumber(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    const value = arg1;\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        options = arg2;\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearNumberFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__numberFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__numberFormatters.delete(id);\r\n    }\r\n}\n\n// TODO: we could not exports for Node native ES Moudles yet...\r\n{\r\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\r\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\r\n    }\r\n}\n\nexport { CoreErrorCodes, CoreWarnCodes, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getWarnMessage, handleMissing, initI18nDevTools, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\n"]},"metadata":{},"sourceType":"module"}